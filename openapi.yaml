openapi: 3.0.1
info:
  title: Payment Order Initiation - Payment Order
  version: 1.0.0
  description: >-
    Esta API permitirá inciar el proceso uno a uno de pago para nominas,
    proveedores y terceros.
  x-organization: private
servers:
  - url: >-
      https://$(catalog.host)/v1/operations/cross-product/payments/payment-order-initiation/payment-order
paths:
  /health:
    head:
      tags:
        - Monitoring
      responses:
        '200':
          headers:
            api-version:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: API Version
              example: 1.0.0
              description: Versión de la API.
            rate-limit:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: Resquest limit per time interval.
              example: 150/1second
              description: Limite de solicitudes por intervalo de tiempo
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000; includesubdomains
              description: >-
                Establece una política de seguridad estricta de transporte
                (HSTS), lo que indica al navegador que solo debe acceder al
                sitio web a través de una conexión HTTPS segura durante un
                período de tiempo determinado (en este caso, 31536000 segundos,
                que es un año) y que incluya todos los subdominios (incluyendo
                subdominios).
            cache-control:
              schema:
                type: string
              example: private, no-cache, no-store, max-age=0, no-transform
              description: >-
                Indica al navegador web y a los intermediarios que no almacenen
                en caché ninguna versión de la respuesta, lo que significa que
                deben solicitar siempre una nueva copia al servidor.
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
              description: >-
                Esta cabecera establece una política que define si otros
                dominios pueden cargar recursos (como fuentes, contenido
                multimedia, etc.) desde tu servidor. Es especialmente relevante
                para contenidos que se cargan en aplicaciones Flash y Adobe PDF,
                y ayuda a prevenir ataques de secuencias de comandos (scripts)
                entre dominios.
            referrer-policy:
              schema:
                type: string
              example: strict-origin-when-cross-origin
              description: >-
                Esta cabecera controla qué información sobre el referer (o
                referente) de una solicitud HTTP es compartida con los sitios
                web de destino. Esto es útil para limitar los datos expuestos
                sobre el origen de la solicitud, mejorando la privacidad de los
                usuarios al evitar compartir la URL completa.
            permissions-policy:
              schema:
                type: string
              example: camera=(), microphone=(), geolocation=(), usb=(), midi=()
              description: >-
                Esta cabecera define qué APIs o funcionalidades del navegador
                (como ubicación, cámara, micrófono, etc.) están disponibles para
                el sitio web o los iframes de terceros. Controlar estas
                funciones ayuda a limitar la exposición de los datos del usuario
                y mitigar riesgos potenciales de privacidad y seguridad.
            content-security-policy:
              schema:
                type: string
              example: default-src 'self'; frame-ancestors 'self'; form-action 'self'
              description: >-
                Especifica una política de seguridad de contenido que controla
                qué recursos pueden cargarse en el contexto del documento
                actual. En este caso, se establece que ningún marco (iframes)
                puede ser cargado desde ningún origen ('none').
            message-id:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: >-
                      Message identifier or correlation identifier used for the
                      traceability of the API calls.
              example: d1f46c01-7d59-42a1-8171-633fd7d86cd6
              description: >-
                Identificador del mensaje o de correlación usado para la
                trazabilidad de los llamados a las APIs.
            content-type:
              schema:
                type: string
              example: application/json
              description: Content type de respuesta
          description: Respuesta exitosa.
          x-ibm-languages:
            description:
              en: Successful response.
      security:
        - clientId: []
          clientSecret: []
      operationId: healthOperation
      summary: Metodo que permite monitorear la API
  /initiate-payment:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/initiatePaymentRequest'
            examples:
              procesoExitosoPagoIniciadoBeneficiarioInscrito:
                description: >-
                  ESCENARIO proceso de pago iniciado exitosamente por un tercero
                  (TPP) a un acreedor inscrito de un cliente deudor DADO que el
                  tercero (TPP) cuenta con el consentimiendo del deudor para
                  realizar debitos de su cuenta y el tipo y número de
                  identificación del deudor existe y el deudor tiene
                  parametrizado la inscripción de acreedores y el acreedor del
                  pago esta inscrito para el deudor o el TPP y la cuenta origen
                  pertenece al deudor y la cuenta origen esta activa y tiene
                  fondos suficientes y la cuenta origen no ha superado el tope
                  de transacción permitido y la cuenta destino esta activa y
                  permite creditos y el código del banco de la cuenta origen y
                  destino existe CUANDO se envia la solicitud de pago ENTONCES
                  se inicia el proceso de pago.
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-01-19T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '9988000001'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202501011001
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: ClientSecrect
                            Val: CST1a2s3d
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '7350050.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo@ejmp.com
                              MobNb: +57-3001230001
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: CC
                            Nm: Luis Uno
                          CdtrAcct:
                            Cd: SVGS
                            Id:
                              Othr:
                                Id: '115000001231'
                            SchmNm:
                              Cd: luno@ejemplo.com
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '1086'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_1
                          RmtInf:
                            Ustrd: 190.00.1.1
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '225'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '00'
                                  SchmeNm:
                                    Cd: CC
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '9918000001'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '225000001236'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO NOMINA EMPRESA UNO
                        PmtMtd: TRF
                        ReqExctnDt: '2025-01-30T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Tarifa - Plus
                          Val: Plus
                        PlcAndNm: Cobro de transacción
              procesoExitosoPagoIniciadoBeneficiarioNoInscrito:
                description: >-
                  ESCENARIO Proceso de pago iniciado exitosamente por un tercero
                  (TPP) a un acreedor no inscrito de un cliente deudor DADO que
                  el tercero (TPP) cuenta con el consentimiendo del deudor para
                  realizar debitos de su cuenta y el tipo y número de
                  identificación del cliente deudor existe y el deudor NO tiene
                  parametrizado la inscripción de acreedores y el acreedor del
                  pago NO esta inscrito y la cuenta origen pertenece al deudor y
                  la cuenta origen esta activa y tiene fondos suficientes y la
                  cuenta origen no a superado el tope de transacción permitido y
                  la cuenta destino esta activa y permite creditos y el código
                  del banco de la cuenta origen y destino existe CUANDO se envia
                  la solicitud de pago ENTONCES se inicia el proceso de pago.
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-02-19T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '9988000002'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202501011002
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: ClientId
                            Val: CI11s22s
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '325000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemp@ejmp.com
                              MobNb: +57-3001230002
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000002'
                                  SchmeNm:
                                    Cd: CC
                            Nm: Juan Perez
                          CdtrAcct:
                            Cd: SVGS
                            Id:
                              Othr:
                                Id: '115000001232'
                            SchmNm:
                              Cd: '00'
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '1007'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_2
                          RmtInf:
                            Ustrd: 190.00.1.2
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '225'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '00'
                                  SchmeNm:
                                    Cd: CC
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '9918000002'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '225000001232'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO NOMINA EMPRESA DOS
                        PmtMtd: TRF
                        ReqExctnDt: '2025-01-30T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Tarifa - Escencial
                          Val: Cobro
                        PlcAndNm: Información adicional
              procesoExitosoPagoIniciadoPagadorDirectoBenificiarioInscrito:
                description: >-
                  ESCENARIO Proceso de pago iniciado exitosamente por un deudor
                  a un beneficiario inscrito DADO que el tipo y numero de
                  identificación del deudor esta activo y tiene parametrizado la
                  inscripción de beneficiarios y el acreedor del pago está
                  inscrito y la cuenta origen es del deudor y la cuenta origen
                  está activa y tiene fondos suficientes y la cuenta origen no
                  ha superado el tope de transacción permitida y la cuenta
                  destino existe y permite creditos y el código del banco de la
                  cuenta origen y destino existe CUANDO se envia la solicitud de
                  pago ENTONCES se inicia el proceso de pago
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-01-07T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '9988000003'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202501011003
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: ClientSecret
                            Val: 11s11
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '1409000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo3@ejmp.com
                              MobNb: +57-3001230003
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '9188000003'
                                  SchmeNm:
                                    Cd: NIT
                            Nm: Empresa Tres
                          CdtrAcct:
                            Cd: SVGS
                            Id:
                              Othr:
                                Id: '115000001233'
                            SchmNm:
                              Cd: '00'
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '1087'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_3
                          RmtInf:
                            Ustrd: 190.00.1.3
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '225'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '00'
                                  SchmeNm:
                                    Cd: CC
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '9988000003'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '225000001233'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO NOMINA EMPRESA TRES
                        PmtMtd: TRF
                        ReqExctnDt: '2025-01-30T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Tarifa
                          Val: Plus
                        PlcAndNm: Información adicional
              procesoExitosoPagoIniciadoPagadorDirectoBenificiarioNoInscrito:
                description: >-
                  ESCENARIO Proceso de pago iniciado exitosamente por un deudor
                  a un beneficiario inscrito DADO que el tipo y numero de
                  identificación del deudor esta activo y tiene parametrizado la
                  inscripción de beneficiarios y el acreedor del pago está
                  inscrito y la cuenta origen es del deudor y la cuenta origen
                  está activa y tiene fondos suficientes  y la cuenta origen no
                  ha superado el tope de transacción permitida y la cuenta
                  destino existe y permite creditos y el código del banco de la
                  cuenta origen y destino existe CUANDO se envia la solicitud de
                  pago ENTONCES se inicia el proceso de pago.
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-02-19T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '9988000004'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202403041004
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: ClientId
                            Val: aa123ss
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '22500000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo4@ejmp.com
                              MobNb: +57-3001230004
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '9188000004'
                                  SchmeNm:
                                    Cd: NIT
                            Nm: Proveedor Cuatro
                          CdtrAcct:
                            Cd: SVGS
                            Id:
                              Othr:
                                Id: '221000001234'
                            SchmNm:
                              Cd: email@mail.com
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '1051'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_CUATRO
                          RmtInf:
                            Ustrd: 190.00.1.4
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '220'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '123'
                                  SchmeNm:
                                    Cd: CC
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '9988000004'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '225000001234'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO PROVEEDORES
                        PmtMtd: TRF
                        ReqExctnDt: '2025-02-19T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Tarifa
                          Val: Plus
                        PlcAndNm: Cobro adicional
              procesoExitosoPagoIniciadoEnNombreDeudorBeneficiarioInscrito:
                description: >-
                  ESCENARIO Proceso de pago iniciado exitosamente por un tercero
                  (TPP) a un acreedor inscrito a nombre de un deudor DADO que el
                  tercero (TPP) cuenta con el consentimiento del deudor para
                  realizar el pago en su nombre  y el tipo y número de
                  identificación del cliente deudor existe y el deudor tiene
                  parametrizado la inscripción de acreedores y el acreedor del
                  pago esta inscrito y la cuenta origen pertenece al TPP y la
                  cuenta origen esta activa y tiene fondos suficientes y el
                  cliente pagador no ha superado el tope de transacción
                  permitido y la cuenta destino esta activa y permite creditos y
                  el código del banco de la cuenta origen y destino existe
                  CUANDO se envia la solicitud de pago ENTONCES se inicia el
                  proceso de pago.
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-01-19T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '9288000005'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202403041005
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: ClientId
                            Val: Id123455
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '1409000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo5@ejmp.com
                              MobNb: +57-3001230005
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000005'
                                  SchmeNm:
                                    Cd: CC
                            Nm: Tito Perez
                          CdtrAcct:
                            Cd: IKEY
                            Id:
                              Othr:
                                Id: '00'
                            SchmNm:
                              Cd: tito123@gmail.com
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '0000'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_5
                          RmtInf:
                            Ustrd: 190.00.1.5
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '238'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '00'
                                  SchmeNm:
                                    Cd: CC
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '9988000005'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '225000001235'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO TERCEROS
                        PmtMtd: TRF
                        ReqExctnDt: '2025-01-30T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Tarifa
                          Val: Plus
                        PlcAndNm: Información adicional
              procesoExitosoPagoIniciadoEnNombreDeudorBeneficiarioNoInscrito:
                description: >-
                  ESCENARIO Proceso de pago iniciado exitosamente por un tercero
                  a un acreedor NO inscrito a nombre de un deudor DADO que el
                  tercero cuenta con el consentimiento del deudor para realizar
                  el pago en su nombre  y el tipo y número de identificación del
                  cliente deudor existe y el deudor NO tiene parametrizado la
                  inscripción de acreedores y el acreedor del pago NO esta
                  inscrito y la cuenta origen pertenece al TPP y la cuenta
                  origen esta activa y tiene fondos suficientes y la cuenta
                  origen no a superado el tope de transacción permitido y la
                  cuenta destino esta activa y permite creditos y el código del
                  banco de la cuenta origen y destino existe CUANDO se envia la
                  solicitud de pago ENTONCES se inicia el proceso de pago.
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-02-19T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '9928000006'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202403041006
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: ClientSecret
                            Val: CSA1234
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '1409000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo6@ejmp.com
                              MobNb: +57-3001230006
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000006'
                                  SchmeNm:
                                    Cd: CC
                            Nm: Oscar Seis
                          CdtrAcct:
                            Cd: CHEK
                            Id:
                              Othr:
                                Id: '00'
                            SchmNm:
                              Cd: '00'
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '1007'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_6
                          RmtInf:
                            Ustrd: 190.00.1.6
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '225'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000066'
                                  SchmeNm:
                                    Cd: CC
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '9988000006'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '225000001236'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO NOMINA EMPRESA SEIS
                        PmtMtd: TRF
                        ReqExctnDt: '2025-02-30T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Tarifa
                          Val: Valor
                        PlcAndNm: Información adicional
              procesoFallidoDeudorNoExiste:
                description: >-
                  ESCENARIO cliente deudor no existe DADO que el tipo y número
                  de identificación del cliente deudor no existe CUANDO se envia
                  la solicitud de pago ENTONCES no se permite iniciar el proceso
                  de pago y emite un mensaje de excepción.
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-02-19T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202403041001
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: Llave
                            Val: Valor
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '1409000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo@ejmp.com
                              MobNb: +57-3001230000
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                            Nm: Juan Perez
                          CdtrAcct:
                            Cd: SVGS
                            Id:
                              Othr:
                                Id: '115000001236'
                            SchmNm:
                              Cd: email@banco.com
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '1007'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_1
                          RmtInf:
                            Ustrd: 190.00.1.1
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '238'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '1234561111'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '115000001236'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO NOMINA EMPRESA UNO
                        PmtMtd: TRF
                        ReqExctnDt: '2025-02-19T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Llave
                          Val: Valor
                        PlcAndNm: Información adicional
              procesoFallidoAcreedorNoInscrito:
                description: >-
                  ESCENARIO acreedor no inscrito DADO que el deudor tiene
                  parametrizado la inscripción de acreedores y el acreedor del
                  pago no esta inscrito CUANDO se envía la solicitud de pago
                  ENTONCES no se permite iniciar el proceso de pago y genera un
                  mensaje de excepción.
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-03-19T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202403041001
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: Llave
                            Val: Valor
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '1409000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo@ejmp.com
                              MobNb: +57-3001230000
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1111111111'
                                  SchmeNm:
                                    Cd: NIT
                            Nm: Juan Perez
                          CdtrAcct:
                            Cd: SVGS
                            Id:
                              Othr:
                                Id: '115000001236'
                            SchmNm:
                              Cd: email@banco.com
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '1007'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_8
                          RmtInf:
                            Ustrd: 190.00.1.1
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '238'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '1088000001'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '115000001236'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO NOMINA EMPRESA OCHO
                        PmtMtd: TRF
                        ReqExctnDt: '2025-02-19T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Llave
                          Val: Valor
                        PlcAndNm: Información adicional
              procesoFallidoCuentaDeudoraNoActiva:
                description: >-
                  ESCENARIO cuenta origen no activa DADO que la cuenta origen no
                  está activa CUANDO se envia la solicitud de pago ENTONCES no
                  se permite iniciar el proceso de pago y devuelve una excepción
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-02-27T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202403041009
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: Llave
                            Val: Valor
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '1409000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo@ejmp.com
                              MobNb: +57-3001230000
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                            Nm: Juan Perez
                          CdtrAcct:
                            Cd: SVGS
                            Id:
                              Othr:
                                Id: '115000001236'
                            SchmNm:
                              Cd: email@banco.com
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '1007'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_9
                          RmtInf:
                            Ustrd: 190.00.1.1
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '238'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '1088000001'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '11111111111118'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO NOMINA EMPRESA NUEVE
                        PmtMtd: TRF
                        ReqExctnDt: '2025-02-28T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Llave
                          Val: Valor
                        PlcAndNm: Información adicional
              procesoFallidoCuentaOrigenSinFondos:
                description: >-
                  ESCENARIO cuenta origen sin fondos DADO que la cuenta origen
                  no tiene fondos suficientes CUANDO se envia la solicitud de
                  pago ENTONCES no se permite inicializar el proceso de pago y
                  genera un mensaje de excepción.
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-03-19T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202403041001
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: Llave
                            Val: Valor
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '1409000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo@ejmp.com
                              MobNb: +57-3001230000
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                            Nm: Juan Perez
                          CdtrAcct:
                            Cd: SVGS
                            Id:
                              Othr:
                                Id: '115000001236'
                            SchmNm:
                              Cd: email@banco.com
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '1007'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_1
                          RmtInf:
                            Ustrd: 190.00.1.1
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '238'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '1088000001'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '115000001236'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO NOMINA EMPRESA UNO
                        PmtMtd: TRF
                        ReqExctnDt: '2025-03-25T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Llave
                          Val: Valor
                        PlcAndNm: Información adicional
              procesoFallidoCuentaOrigenNoExiste:
                description: >-
                  ESCENARIO cuenta origen no existe DADO que el número de cuenta
                  origen no es válido CUANDO se envía la soliciditud de pago
                  ENTONCES no se permite inicializar el proceso de pago y envia
                  un mensaje de excepción.
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-02-19T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202403041001
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: Llave
                            Val: Valor
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '1409000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo@ejmp.com
                              MobNb: +57-3001230000
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                            Nm: Juan Perez
                          CdtrAcct:
                            Cd: SVGS
                            Id:
                              Othr:
                                Id: '115000001236'
                            SchmNm:
                              Cd: email@banco.com
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '1007'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_1
                          RmtInf:
                            Ustrd: 190.00.1.1
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '238'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '1088000001'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '1150000010'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO NOMINA EMPRESA UNO
                        PmtMtd: TRF
                        ReqExctnDt: '2025-02-19T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Llave
                          Val: Valor
                        PlcAndNm: Información adicional
              procesoFallidoTopeTransaccionalSuperado:
                description: >-
                  ESCENARIO tope superado DADO que la cuenta origen exedió el
                  tope maximo permitido para retiros CUANDO se envia la
                  solicitud de pago ENTONCES no se permite inicializar el
                  proceso de pago.
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-02-19T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202403041001
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: Llave
                            Val: Valor
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '1409000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo@ejmp.com
                              MobNb: +57-3001230000
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                            Nm: Juan Perez
                          CdtrAcct:
                            Cd: SVGS
                            Id:
                              Othr:
                                Id: '115000001236'
                            SchmNm:
                              Cd: email@banco.com
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '1007'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_1
                          RmtInf:
                            Ustrd: 190.00.1.1
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '238'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '1088000001'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '115000001236'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO NOMINA EMPRESA UNO
                        PmtMtd: TRF
                        ReqExctnDt: '2025-02-19T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Llave
                          Val: Valor
                        PlcAndNm: Información adicional
              procesoFallidoCuentaDestinoNoActiva:
                description: >-
                  ESCENARIO cuenta destino no activa DADO que la cuenta destino
                  no está activa CUANDO se envia la solicitud de pago ENTONCES
                  no permite inicializar el proceso de pago.
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-02-19T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202403041001
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: Llave
                            Val: Valor
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '1409000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo@ejmp.com
                              MobNb: +57-3001230000
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                            Nm: Juan Perez
                          CdtrAcct:
                            Cd: SVGS
                            Id:
                              Othr:
                                Id: '0123456'
                            SchmNm:
                              Cd: email@banco.com
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '1007'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_1
                          RmtInf:
                            Ustrd: 190.00.1.1
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '238'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '1088000001'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '115000001236'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO NOMINA EMPRESA UNO
                        PmtMtd: TRF
                        ReqExctnDt: '2025-02-19T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Llave
                          Val: Valor
                        PlcAndNm: Información adicional
              procesoFallidoCuentaDestinoNoPermiteCreditos:
                description: >-
                  ESCENARIO cuenta destino no permite creditos DADO que la
                  cuenta destino no permite creditos CUANDO se envia la
                  solicitud de pago ENTONCES no se permite inicializar el
                  proceso de pago.
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-02-19T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202403041001
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: Llave
                            Val: Valor
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '1409000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo@ejmp.com
                              MobNb: +57-3001230000
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                            Nm: Juan Perez
                          CdtrAcct:
                            Cd: SVGS
                            Id:
                              Othr:
                                Id: '23456789'
                            SchmNm:
                              Cd: email@banco.com
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '1007'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_1
                          RmtInf:
                            Ustrd: 190.00.1.1
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '238'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '1088000001'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '115000001236'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO NOMINA EMPRESA UNO
                        PmtMtd: TRF
                        ReqExctnDt: '2025-02-19T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Llave
                          Val: Valor
                        PlcAndNm: Información adicional
              procesoFallidoCodigoBancoNoExiste:
                description: >-
                  ESCENARIO código de banco no existe DADO que el código de
                  banco no existe CUANDO se envia la solicitud de pago ENTONCES
                  no se permite iniciar el proceso de pago y genera un mensaje
                  de excepción.
                value:
                  data:
                    CstmrCdtTrfInitn:
                      GrpHdr:
                        CredtTm: '2025-02-19T09:30:15.123-05:00'
                        InitgPty:
                          InitgPty:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        InitnSrc:
                          Nm: CRP
                        MsgId: MSG-202403041001
                        NbOfTxs: '1'
                        SplmtryData:
                          Envlp:
                            Key: Llave
                            Val: Valor
                          PlcAndNm: Información adicional
                      PmtInf:
                        CdtTrfTxInf:
                          Amt:
                            InstdAmt:
                              Amt: '1409000.00'
                              Ccy: COP
                          Cdtr:
                            CtctDtls:
                              EmailAdr: ejemplo@ejmp.com
                              MobNb: +57-3001230000
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                            Nm: Juan Perez
                          CdtrAcct:
                            Cd: SVGS
                            Id:
                              Othr:
                                Id: '115000001236'
                            SchmNm:
                              Cd: email@banco.com
                          CdtrAgt:
                            FinInstnId:
                              Othr:
                                Id: '0000'
                          PmtId:
                            EndToEndId: NOMBRE_PAGO_1
                          RmtInf:
                            Ustrd: 190.00.1.1
                          PmtTpInf:
                            CtgyPurp:
                              Prtry: '238'
                          UltmtCdtr:
                            Id:
                              PrvtId:
                                Othr:
                                  Id: '1088000001'
                                  SchmeNm:
                                    Cd: NIT
                        Dbtr:
                          Id:
                            PrvtId:
                              Othr:
                                Id: '1088000001'
                                SchmeNm:
                                  Cd: NIT
                        DbtrAcct:
                          Id:
                            Othr:
                              Id: '115000001236'
                          Tp:
                            Cd:
                              XtrnlCshAcctTp1Cd: CACC
                        DbtrAgt:
                          FinInstnId:
                            Othr:
                              Id: '1007'
                        PmtInfId: PAGO NOMINA EMPRESA UNO
                        PmtMtd: TRF
                        ReqExctnDt: '2025-02-19T09:30:15.123-05:00'
                      SplmtryData:
                        Envlp:
                          Key: Llave
                          Val: Valor
                        PlcAndNm: Información adicional
        required: true
      tags:
        - initiatePayment
      parameters:
        - example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          name: json-web-token
          description: JWT generado por el consumidor
          schema:
            type: string
          in: header
          required: true
        - example: >-
            -----BEGIN PUBLIC KEY-----
            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4yD5qwmv3HtJ3Xpe7G8Y
            SqcK9vyU0fi/5OnOJ1o31x9GyqIByFBlxWdJF8TPvQ+Mt+GeiUBduZbwLdGpHg1E
            l37iq6sh1mVDsP4dZGBXVfXcr+XrMqZJK9IneKiKrlNNDnkIvPWjztiJEqhtMk+/
            yGm77jlmcb9R0QVWInW8aVe8w6iqN1+o52S1OjtFPiY8jYckWohc1V3AK4X2eV5d
            RZU/cwTYvvkqTD8OKOHYw2vVO8rRezPZhBObASJpjA0Q1Y5bkTyYjPxkNWjLsR8
            ZxU7aTKg5Trn1L6cTtA2B6cJK0hRF5bfYKvO8/2khe2eQzH79OL6d0mVciimGd+M
            iwIDAQAB -----END PUBLIC KEY-----
          name: x-client-certificate
          description: Certificado público configurado en el portal sin saltos de linea
          schema:
            type: string
          in: header
          required: true
        - example: cf5e04d7-519b-4834-ab75-3b02f7389f84
          name: message-id
          description: >-
            Identificador de transacción. Se recomienda usar un UUID V4 para el
            valor de este campo.
          schema:
            pattern: >-
              ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
            type: string
          in: header
          required: true
        - name: consumer-id
          in: header
          required: true
          schema:
            type: string
          description: Identificador único del consumidor. Debe viajar el client-id de la aplicación consumidora que lanza la petición original. Utilizado para identificar el consumidor original cuando existe una orquestación (consumo entre diferentes Apis).
      responses:
        '200':
          headers:
            api-version:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: API Version
              example: 1.0.0
              description: Versión de la API.
            rate-limit:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: Resquest limit per time interval.
              example: 150/1second
              description: Limite de solicitudes por intervalo de tiempo
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000; includesubdomains
              description: >-
                Establece una política de seguridad estricta de transporte
                (HSTS), lo que indica al navegador que solo debe acceder al
                sitio web a través de una conexión HTTPS segura durante un
                período de tiempo determinado (en este caso, 31536000 segundos,
                que es un año) y que incluya todos los subdominios (incluyendo
                subdominios).
            cache-control:
              schema:
                type: string
              example: private, no-cache, no-store, max-age=0, no-transform
              description: >-
                Indica al navegador web y a los intermediarios que no almacenen
                en caché ninguna versión de la respuesta, lo que significa que
                deben solicitar siempre una nueva copia al servidor.
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
              description: >-
                Esta cabecera establece una política que define si otros
                dominios pueden cargar recursos (como fuentes, contenido
                multimedia, etc.) desde tu servidor. Es especialmente relevante
                para contenidos que se cargan en aplicaciones Flash y Adobe PDF,
                y ayuda a prevenir ataques de secuencias de comandos (scripts)
                entre dominios.
            referrer-policy:
              schema:
                type: string
              example: strict-origin-when-cross-origin
              description: >-
                Esta cabecera controla qué información sobre el referer (o
                referente) de una solicitud HTTP es compartida con los sitios
                web de destino. Esto es útil para limitar los datos expuestos
                sobre el origen de la solicitud, mejorando la privacidad de los
                usuarios al evitar compartir la URL completa.
            permissions-policy:
              schema:
                type: string
              example: camera=(), microphone=(), geolocation=(), usb=(), midi=()
              description: >-
                Esta cabecera define qué APIs o funcionalidades del navegador
                (como ubicación, cámara, micrófono, etc.) están disponibles para
                el sitio web o los iframes de terceros. Controlar estas
                funciones ayuda a limitar la exposición de los datos del usuario
                y mitigar riesgos potenciales de privacidad y seguridad.
            content-security-policy:
              schema:
                type: string
              example: default-src 'self'; frame-ancestors 'self'; form-action 'self'
              description: >-
                Especifica una política de seguridad de contenido que controla
                qué recursos pueden cargarse en el contexto del documento
                actual. En este caso, se establece que ningún marco (iframes)
                puede ser cargado desde ningún origen ('none').
            message-id:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: >-
                      Message identifier or correlation identifier used for the
                      traceability of the API calls.
              example: d1f46c01-7d59-42a1-8171-633fd7d86cd6
              description: >-
                Identificador del mensaje o de correlación usado para la
                trazabilidad de los llamados a las APIs.
            content-type:
              schema:
                type: string
              example: application/json
              description: Content type de respuesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/initiatePaymentResponse'
              examples:
                procesoExitosoPagoIniciadoBeneficiarioInscrito:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    data:
                      CstmrPmtStsRpt:
                        GrpHdr:
                          MsgId: '9342221'
                          CreDtTm: '2025-01-19T09:30:15.123-05:00'
                        OrgnlGrpHdr:
                          OrgnlMsgId: MSG-202501011001
                          OrgnlMsgNmId: pain.001.001.12
                        OrgnlPmtInfAndSts:
                          TxInfAndSts:
                            StsRsnInf:
                              AddtlInf: '200'
                            TxSts: RCVD
                            OrgnlEndToEndId: NOMBRE_PAGO_1
                          OrgnlPmtInfId: PAGO NOMINA EMPRESA UNO
                procesoExitosoPagoIniciadoBeneficiarioNoInscrito:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    data:
                      CstmrPmtStsRpt:
                        GrpHdr:
                          MsgId: '93422222'
                          CreDtTm: '2025-01-05T09:30:15.123-05:00'
                        OrgnlGrpHdr:
                          OrgnlMsgId: MSG-202403041002
                          OrgnlMsgNmId: pain.001.001.12
                        OrgnlPmtInfAndSts:
                          TxInfAndSts:
                            StsRsnInf:
                              AddtlInf: '200'
                            TxSts: RCVD
                            OrgnlEndToEndId: NOMBRE_PAGO_2
                          OrgnlPmtInfId: PAGO NOMINA EMPRESA DOS
                procesoExitosoPagoIniciadoPagadorDirectoBenificiarioInscrito:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    data:
                      CstmrPmtStsRpt:
                        GrpHdr:
                          MsgId: '93422223'
                          CreDtTm: '2025-01-07T09:30:15.123-05:00'
                        OrgnlGrpHdr:
                          OrgnlMsgId: MSG-202403041003
                          OrgnlMsgNmId: pain.001.001.12
                        OrgnlPmtInfAndSts:
                          TxInfAndSts:
                            StsRsnInf:
                              AddtlInf: '200'
                            TxSts: RCVD
                            OrgnlEndToEndId: NOMBRE_PAGO_3
                          OrgnlPmtInfId: PAGO NOMINA EMPRESA TRES
                procesoExitosoPagoIniciadoPagadorDirectoBenificiarioNoInscrito:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    data:
                      CstmrPmtStsRpt:
                        GrpHdr:
                          MsgId: '9342224'
                          CreDtTm: '2025-02-19T09:30:15.123-05:00'
                        OrgnlGrpHdr:
                          OrgnlMsgId: MSG-202403041004
                          OrgnlMsgNmId: pain.001.001.12
                        OrgnlPmtInfAndSts:
                          TxInfAndSts:
                            StsRsnInf:
                              AddtlInf: '200'
                            TxSts: RCVD
                            OrgnlEndToEndId: NOMBRE_PAGO_CUATRO
                          OrgnlPmtInfId: PAGO PROVEEDORES
                procesoExitosoPagoIniciadoEnNombreDeudorBeneficiarioInscrito:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    data:
                      CstmrPmtStsRpt:
                        GrpHdr:
                          MsgId: '93422225'
                          CreDtTm: '2025-01-19T09:30:15.123-05:00'
                        OrgnlGrpHdr:
                          OrgnlMsgId: MSG-202403041005
                          OrgnlMsgNmId: pain.001.001.12
                        OrgnlPmtInfAndSts:
                          TxInfAndSts:
                            StsRsnInf:
                              AddtlInf: '200'
                            TxSts: RCVD
                            OrgnlEndToEndId: NOMBRE_PAGO_5
                          OrgnlPmtInfId: PAGO TERCEROS
                procesoExitosoPagoIniciadoEnNombreDeudorBeneficiarioNoInscrito:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    data:
                      CstmrPmtStsRpt:
                        GrpHdr:
                          MsgId: '93422226'
                          CreDtTm: '2025-02-19T09:30:15.123-05:00'
                        OrgnlGrpHdr:
                          OrgnlMsgId: MSG-202403041006
                          OrgnlMsgNmId: pain.001.001.12
                        OrgnlPmtInfAndSts:
                          TxInfAndSts:
                            StsRsnInf:
                              AddtlInf: '200'
                            TxSts: RCVD
                            OrgnlEndToEndId: NOMBRE_PAGO_6
                          OrgnlPmtInfId: PAGO NOMINA EMPRESA SEIS
          description: Proceso exitoso
          x-success-response: Successfull
          x-ibm-languages:
            description:
              en: Successful response.
        '400':
          headers:
            api-version:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: API Version
              example: 1.0.0
              description: Versión de la API.
            rate-limit:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: Resquest limit per time interval.
              example: 150/1second
              description: Limite de solicitudes por intervalo de tiempo
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000; includesubdomains
              description: >-
                Establece una política de seguridad estricta de transporte
                (HSTS), lo que indica al navegador que solo debe acceder al
                sitio web a través de una conexión HTTPS segura durante un
                período de tiempo determinado (en este caso, 31536000 segundos,
                que es un año) y que incluya todos los subdominios (incluyendo
                subdominios).
            cache-control:
              schema:
                type: string
              example: private, no-cache, no-store, max-age=0, no-transform
              description: >-
                Indica al navegador web y a los intermediarios que no almacenen
                en caché ninguna versión de la respuesta, lo que significa que
                deben solicitar siempre una nueva copia al servidor.
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
              description: >-
                Esta cabecera establece una política que define si otros
                dominios pueden cargar recursos (como fuentes, contenido
                multimedia, etc.) desde tu servidor. Es especialmente relevante
                para contenidos que se cargan en aplicaciones Flash y Adobe PDF,
                y ayuda a prevenir ataques de secuencias de comandos (scripts)
                entre dominios.
            referrer-policy:
              schema:
                type: string
              example: strict-origin-when-cross-origin
              description: >-
                Esta cabecera controla qué información sobre el referer (o
                referente) de una solicitud HTTP es compartida con los sitios
                web de destino. Esto es útil para limitar los datos expuestos
                sobre el origen de la solicitud, mejorando la privacidad de los
                usuarios al evitar compartir la URL completa.
            permissions-policy:
              schema:
                type: string
              example: camera=(), microphone=(), geolocation=(), usb=(), midi=()
              description: >-
                Esta cabecera define qué APIs o funcionalidades del navegador
                (como ubicación, cámara, micrófono, etc.) están disponibles para
                el sitio web o los iframes de terceros. Controlar estas
                funciones ayuda a limitar la exposición de los datos del usuario
                y mitigar riesgos potenciales de privacidad y seguridad.
            content-security-policy:
              schema:
                type: string
              example: default-src 'self'; frame-ancestors 'self'; form-action 'self'
              description: >-
                Especifica una política de seguridad de contenido que controla
                qué recursos pueden cargarse en el contexto del documento
                actual. En este caso, se establece que ningún marco (iframes)
                puede ser cargado desde ningún origen ('none').
            message-id:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: >-
                      Message identifier or correlation identifier used for the
                      traceability of the API calls.
              example: d1f46c01-7d59-42a1-8171-633fd7d86cd6
              description: >-
                Identificador del mensaje o de correlación usado para la
                trazabilidad de los llamados a las APIs.
            content-type:
              schema:
                type: string
              example: application/json
              description: Content type de respuesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
              examples:
                BadResquest:
                  value:
                    meta:
                      _messageId: c4e6bd04-5149-11e7-b114-b2f933d5fe66
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 400
                    title: Bad Resquest
                    errors:
                      - code: SA400
                        detail: Mensaje de petición mal formado
          description: Error en la solicitud.
          x-ibm-languages:
            description:
              en: Error in the request.
        '401':
          headers:
            api-version:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: API Version
              example: 1.0.0
              description: Versión de la API.
            rate-limit:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: Resquest limit per time interval.
              example: 150/1second
              description: Limite de solicitudes por intervalo de tiempo
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000; includesubdomains
              description: >-
                Establece una política de seguridad estricta de transporte
                (HSTS), lo que indica al navegador que solo debe acceder al
                sitio web a través de una conexión HTTPS segura durante un
                período de tiempo determinado (en este caso, 31536000 segundos,
                que es un año) y que incluya todos los subdominios (incluyendo
                subdominios).
            cache-control:
              schema:
                type: string
              example: private, no-cache, no-store, max-age=0, no-transform
              description: >-
                Indica al navegador web y a los intermediarios que no almacenen
                en caché ninguna versión de la respuesta, lo que significa que
                deben solicitar siempre una nueva copia al servidor.
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
              description: >-
                Esta cabecera establece una política que define si otros
                dominios pueden cargar recursos (como fuentes, contenido
                multimedia, etc.) desde tu servidor. Es especialmente relevante
                para contenidos que se cargan en aplicaciones Flash y Adobe PDF,
                y ayuda a prevenir ataques de secuencias de comandos (scripts)
                entre dominios.
            referrer-policy:
              schema:
                type: string
              example: strict-origin-when-cross-origin
              description: >-
                Esta cabecera controla qué información sobre el referer (o
                referente) de una solicitud HTTP es compartida con los sitios
                web de destino. Esto es útil para limitar los datos expuestos
                sobre el origen de la solicitud, mejorando la privacidad de los
                usuarios al evitar compartir la URL completa.
            permissions-policy:
              schema:
                type: string
              example: camera=(), microphone=(), geolocation=(), usb=(), midi=()
              description: >-
                Esta cabecera define qué APIs o funcionalidades del navegador
                (como ubicación, cámara, micrófono, etc.) están disponibles para
                el sitio web o los iframes de terceros. Controlar estas
                funciones ayuda a limitar la exposición de los datos del usuario
                y mitigar riesgos potenciales de privacidad y seguridad.
            content-security-policy:
              schema:
                type: string
              example: default-src 'self'; frame-ancestors 'self'; form-action 'self'
              description: >-
                Especifica una política de seguridad de contenido que controla
                qué recursos pueden cargarse en el contexto del documento
                actual. En este caso, se establece que ningún marco (iframes)
                puede ser cargado desde ningún origen ('none').
            message-id:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: >-
                      Message identifier or correlation identifier used for the
                      traceability of the API calls.
              example: d1f46c01-7d59-42a1-8171-633fd7d86cd6
              description: >-
                Identificador del mensaje o de correlación usado para la
                trazabilidad de los llamados a las APIs.
            content-type:
              schema:
                type: string
              example: application/json
              description: Content type de respuesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorizedObjetct'
              examples:
                Unauthorized:
                  value:
                    httpCode: ax0
                    httpMessage: ''
                    MoreInformation: h
          description: Credenciales incorrectas.
          x-ibm-languages:
            description:
              en: Incorrect credentials.
        '403':
          headers:
            api-version:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: API Version
              example: 1.0.0
              description: Versión de la API.
            rate-limit:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: Resquest limit per time interval.
              example: 150/1second
              description: Limite de solicitudes por intervalo de tiempo
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000; includesubdomains
              description: >-
                Establece una política de seguridad estricta de transporte
                (HSTS), lo que indica al navegador que solo debe acceder al
                sitio web a través de una conexión HTTPS segura durante un
                período de tiempo determinado (en este caso, 31536000 segundos,
                que es un año) y que incluya todos los subdominios (incluyendo
                subdominios).
            cache-control:
              schema:
                type: string
              example: private, no-cache, no-store, max-age=0, no-transform
              description: >-
                Indica al navegador web y a los intermediarios que no almacenen
                en caché ninguna versión de la respuesta, lo que significa que
                deben solicitar siempre una nueva copia al servidor.
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
              description: >-
                Esta cabecera establece una política que define si otros
                dominios pueden cargar recursos (como fuentes, contenido
                multimedia, etc.) desde tu servidor. Es especialmente relevante
                para contenidos que se cargan en aplicaciones Flash y Adobe PDF,
                y ayuda a prevenir ataques de secuencias de comandos (scripts)
                entre dominios.
            referrer-policy:
              schema:
                type: string
              example: strict-origin-when-cross-origin
              description: >-
                Esta cabecera controla qué información sobre el referer (o
                referente) de una solicitud HTTP es compartida con los sitios
                web de destino. Esto es útil para limitar los datos expuestos
                sobre el origen de la solicitud, mejorando la privacidad de los
                usuarios al evitar compartir la URL completa.
            permissions-policy:
              schema:
                type: string
              example: camera=(), microphone=(), geolocation=(), usb=(), midi=()
              description: >-
                Esta cabecera define qué APIs o funcionalidades del navegador
                (como ubicación, cámara, micrófono, etc.) están disponibles para
                el sitio web o los iframes de terceros. Controlar estas
                funciones ayuda a limitar la exposición de los datos del usuario
                y mitigar riesgos potenciales de privacidad y seguridad.
            content-security-policy:
              schema:
                type: string
              example: default-src 'self'; frame-ancestors 'self'; form-action 'self'
              description: >-
                Especifica una política de seguridad de contenido que controla
                qué recursos pueden cargarse en el contexto del documento
                actual. En este caso, se establece que ningún marco (iframes)
                puede ser cargado desde ningún origen ('none').
            message-id:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: >-
                      Message identifier or correlation identifier used for the
                      traceability of the API calls.
              example: d1f46c01-7d59-42a1-8171-633fd7d86cd6
              description: >-
                Identificador del mensaje o de correlación usado para la
                trazabilidad de los llamados a las APIs.
            content-type:
              schema:
                type: string
              example: application/json
              description: Content type de respuesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
              examples:
                Forbidden:
                  value:
                    meta:
                      _messageId: c4e6bd04-5149-11e7-b114-b2f933d5fe68
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 403
                    title: Forbidden
                    errors:
                      - code: SA403
                        detail: Permisos insuficientes
          description: Permisos Insuficientes.
          x-ibm-languages:
            description:
              en: Resource not found.
        '404':
          headers:
            api-version:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: API Version
              example: 1.0.0
              description: Versión de la API.
            rate-limit:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: Resquest limit per time interval.
              example: 150/1second
              description: Limite de solicitudes por intervalo de tiempo
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000; includesubdomains
              description: >-
                Establece una política de seguridad estricta de transporte
                (HSTS), lo que indica al navegador que solo debe acceder al
                sitio web a través de una conexión HTTPS segura durante un
                período de tiempo determinado (en este caso, 31536000 segundos,
                que es un año) y que incluya todos los subdominios (incluyendo
                subdominios).
            cache-control:
              schema:
                type: string
              example: private, no-cache, no-store, max-age=0, no-transform
              description: >-
                Indica al navegador web y a los intermediarios que no almacenen
                en caché ninguna versión de la respuesta, lo que significa que
                deben solicitar siempre una nueva copia al servidor.
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
              description: >-
                Esta cabecera establece una política que define si otros
                dominios pueden cargar recursos (como fuentes, contenido
                multimedia, etc.) desde tu servidor. Es especialmente relevante
                para contenidos que se cargan en aplicaciones Flash y Adobe PDF,
                y ayuda a prevenir ataques de secuencias de comandos (scripts)
                entre dominios.
            referrer-policy:
              schema:
                type: string
              example: strict-origin-when-cross-origin
              description: >-
                Esta cabecera controla qué información sobre el referer (o
                referente) de una solicitud HTTP es compartida con los sitios
                web de destino. Esto es útil para limitar los datos expuestos
                sobre el origen de la solicitud, mejorando la privacidad de los
                usuarios al evitar compartir la URL completa.
            permissions-policy:
              schema:
                type: string
              example: camera=(), microphone=(), geolocation=(), usb=(), midi=()
              description: >-
                Esta cabecera define qué APIs o funcionalidades del navegador
                (como ubicación, cámara, micrófono, etc.) están disponibles para
                el sitio web o los iframes de terceros. Controlar estas
                funciones ayuda a limitar la exposición de los datos del usuario
                y mitigar riesgos potenciales de privacidad y seguridad.
            content-security-policy:
              schema:
                type: string
              example: default-src 'self'; frame-ancestors 'self'; form-action 'self'
              description: >-
                Especifica una política de seguridad de contenido que controla
                qué recursos pueden cargarse en el contexto del documento
                actual. En este caso, se establece que ningún marco (iframes)
                puede ser cargado desde ningún origen ('none').
            message-id:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: >-
                      Message identifier or correlation identifier used for the
                      traceability of the API calls.
              example: d1f46c01-7d59-42a1-8171-633fd7d86cd6
              description: >-
                Identificador del mensaje o de correlación usado para la
                trazabilidad de los llamados a las APIs.
            content-type:
              schema:
                type: string
              example: application/json
              description: Content type de respuesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
              examples:
                procesoFallidoDeudorNoExiste:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 404
                    title: Not found
                    errors:
                      - code: BP404
                        detail: No existe información del pagador
                procesoFallidoAcreedorNoInscrito:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 404
                    title: Not found
                    errors:
                      - code: BP404
                        detail: Error, acreedor no asociado a la cuenta
                procesoFallidoCuentaDeudoraNoActiva:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 404
                    title: Not Found
                    errors:
                      - code: BP404
                        detail: Error en número de cuenta
                procesoFallidoCuentaOrigenSinFondos:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 404
                    title: Not Found
                    errors:
                      - code: BP404
                        detail: Fondos insuficientes en el pagador
                procesoFallidoCuentaOrigenNoExiste:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 404
                    title: Not Found
                    errors:
                      - code: BP404
                        detail: Cuenta no existe
                procesoFallidoTopeTransaccionalSuperado:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 404
                    title: Not Found
                    errors:
                      - code: BP404
                        detail: Requested resource could not be found
                procesoFallidoCuentaDestinoNoActiva:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 404
                    title: Not Found
                    errors:
                      - code: BP404
                        detail: Error en número de cuenta
                procesoFallidoCuentaDestinoNoPermiteCreditos:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 404
                    title: Not Found
                    errors:
                      - code: BP404
                        detail: Error en número de cuenta
                procesoFallidoCodigoBancoNoExiste:
                  value:
                    meta:
                      _messageId: 56d6adc5-b25a-4d75-a663-56a62bad4982
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 404
                    title: Not Found
                    errors:
                      - code: BP404
                        detail: Error en el código de banco
          description: Recurso no encontrado.
          x-ibm-languages:
            description:
              en: Resource not found.
        '405':
          headers:
            api-version:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: API Version
              example: 1.0.0
              description: Versión de la API.
            rate-limit:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: Resquest limit per time interval.
              example: 150/1second
              description: Limite de solicitudes por intervalo de tiempo
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000; includesubdomains
              description: >-
                Establece una política de seguridad estricta de transporte
                (HSTS), lo que indica al navegador que solo debe acceder al
                sitio web a través de una conexión HTTPS segura durante un
                período de tiempo determinado (en este caso, 31536000 segundos,
                que es un año) y que incluya todos los subdominios (incluyendo
                subdominios).
            cache-control:
              schema:
                type: string
              example: private, no-cache, no-store, max-age=0, no-transform
              description: >-
                Indica al navegador web y a los intermediarios que no almacenen
                en caché ninguna versión de la respuesta, lo que significa que
                deben solicitar siempre una nueva copia al servidor.
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
              description: >-
                Esta cabecera establece una política que define si otros
                dominios pueden cargar recursos (como fuentes, contenido
                multimedia, etc.) desde tu servidor. Es especialmente relevante
                para contenidos que se cargan en aplicaciones Flash y Adobe PDF,
                y ayuda a prevenir ataques de secuencias de comandos (scripts)
                entre dominios.
            referrer-policy:
              schema:
                type: string
              example: strict-origin-when-cross-origin
              description: >-
                Esta cabecera controla qué información sobre el referer (o
                referente) de una solicitud HTTP es compartida con los sitios
                web de destino. Esto es útil para limitar los datos expuestos
                sobre el origen de la solicitud, mejorando la privacidad de los
                usuarios al evitar compartir la URL completa.
            permissions-policy:
              schema:
                type: string
              example: camera=(), microphone=(), geolocation=(), usb=(), midi=()
              description: >-
                Esta cabecera define qué APIs o funcionalidades del navegador
                (como ubicación, cámara, micrófono, etc.) están disponibles para
                el sitio web o los iframes de terceros. Controlar estas
                funciones ayuda a limitar la exposición de los datos del usuario
                y mitigar riesgos potenciales de privacidad y seguridad.
            content-security-policy:
              schema:
                type: string
              example: default-src 'self'; frame-ancestors 'self'; form-action 'self'
              description: >-
                Especifica una política de seguridad de contenido que controla
                qué recursos pueden cargarse en el contexto del documento
                actual. En este caso, se establece que ningún marco (iframes)
                puede ser cargado desde ningún origen ('none').
            message-id:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: >-
                      Message identifier or correlation identifier used for the
                      traceability of the API calls.
              example: d1f46c01-7d59-42a1-8171-633fd7d86cd6
              description: >-
                Identificador del mensaje o de correlación usado para la
                trazabilidad de los llamados a las APIs.
            content-type:
              schema:
                type: string
              example: application/json
              description: Content type de respuesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorizedObjetct'
              examples:
                MethodNotAllowed:
                  value:
                    httpCode: '405'
                    httpMessage: Method Not Allowed
                    MoreInformation: Invalid HTTP method.
          description: Método HTTP incorrecto.
          x-ibm-languages:
            description:
              en: Method Not Allowed.
        '409':
          headers:
            api-version:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: API Version
              example: 1.0.0
              description: Versión de la API.
            rate-limit:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: Resquest limit per time interval.
              example: 150/1second
              description: Limite de solicitudes por intervalo de tiempo
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000; includesubdomains
              description: >-
                Establece una política de seguridad estricta de transporte
                (HSTS), lo que indica al navegador que solo debe acceder al
                sitio web a través de una conexión HTTPS segura durante un
                período de tiempo determinado (en este caso, 31536000 segundos,
                que es un año) y que incluya todos los subdominios (incluyendo
                subdominios).
            cache-control:
              schema:
                type: string
              example: private, no-cache, no-store, max-age=0, no-transform
              description: >-
                Indica al navegador web y a los intermediarios que no almacenen
                en caché ninguna versión de la respuesta, lo que significa que
                deben solicitar siempre una nueva copia al servidor.
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
              description: >-
                Esta cabecera establece una política que define si otros
                dominios pueden cargar recursos (como fuentes, contenido
                multimedia, etc.) desde tu servidor. Es especialmente relevante
                para contenidos que se cargan en aplicaciones Flash y Adobe PDF,
                y ayuda a prevenir ataques de secuencias de comandos (scripts)
                entre dominios.
            referrer-policy:
              schema:
                type: string
              example: strict-origin-when-cross-origin
              description: >-
                Esta cabecera controla qué información sobre el referer (o
                referente) de una solicitud HTTP es compartida con los sitios
                web de destino. Esto es útil para limitar los datos expuestos
                sobre el origen de la solicitud, mejorando la privacidad de los
                usuarios al evitar compartir la URL completa.
            permissions-policy:
              schema:
                type: string
              example: camera=(), microphone=(), geolocation=(), usb=(), midi=()
              description: >-
                Esta cabecera define qué APIs o funcionalidades del navegador
                (como ubicación, cámara, micrófono, etc.) están disponibles para
                el sitio web o los iframes de terceros. Controlar estas
                funciones ayuda a limitar la exposición de los datos del usuario
                y mitigar riesgos potenciales de privacidad y seguridad.
            content-security-policy:
              schema:
                type: string
              example: default-src 'self'; frame-ancestors 'self'; form-action 'self'
              description: >-
                Especifica una política de seguridad de contenido que controla
                qué recursos pueden cargarse en el contexto del documento
                actual. En este caso, se establece que ningún marco (iframes)
                puede ser cargado desde ningún origen ('none').
            message-id:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: >-
                      Message identifier or correlation identifier used for the
                      traceability of the API calls.
              example: d1f46c01-7d59-42a1-8171-633fd7d86cd6
              description: >-
                Identificador del mensaje o de correlación usado para la
                trazabilidad de los llamados a las APIs.
            content-type:
              schema:
                type: string
              example: application/json
              description: Content type de respuesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
              examples:
                nombreFuncionalEscenarioExcepcionBdd:
                  value:
                    meta:
                      _messageId: c4e6bd04-5149-11e7-b114-b2f933d5fe68
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 409
                    title: Conflict
                    errors:
                      - code: BP409XXX1
                        detail: >-
                          La solicitud entra en conflicto con el estado actual
                          del recurso
                      - code: BP409XXXX
                        detail: >-
                          La solicitud entra en conflicto con el estado actual
                          del recurso
                Conflict:
                  value:
                    meta:
                      _messageId: c4e6bd04-5149-11e7-b114-b2f933d5fe68
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 409
                    title: Conflict
                    errors:
                      - code: BP409XXXX
                        detail: Conflicto con la data de petición
                DefaultResponse:
                  value:
                    meta:
                      _messageId: 84133252-2b88-469c-b0da-03389a560eae
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 409
                    title: Conflict
                    errors:
                      - code: BP12700001
                        detail: CONFLICTO DEBIDO A LA DATA DE PETICIÓN
          description: >
            El estado del recurso presenta conflictos con los datos de la
            solicitud.
          x-ibm-languages:
            description:
              en: Resource state has conflicts with data of the request.
        '500':
          headers:
            api-version:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: API Version
              example: 1.0.0
              description: Versión de la API.
            rate-limit:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: Resquest limit per time interval.
              example: 150/1second
              description: Limite de solicitudes por intervalo de tiempo
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000; includesubdomains
              description: >-
                Establece una política de seguridad estricta de transporte
                (HSTS), lo que indica al navegador que solo debe acceder al
                sitio web a través de una conexión HTTPS segura durante un
                período de tiempo determinado (en este caso, 31536000 segundos,
                que es un año) y que incluya todos los subdominios (incluyendo
                subdominios).
            cache-control:
              schema:
                type: string
              example: private, no-cache, no-store, max-age=0, no-transform
              description: >-
                Indica al navegador web y a los intermediarios que no almacenen
                en caché ninguna versión de la respuesta, lo que significa que
                deben solicitar siempre una nueva copia al servidor.
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
              description: >-
                Esta cabecera establece una política que define si otros
                dominios pueden cargar recursos (como fuentes, contenido
                multimedia, etc.) desde tu servidor. Es especialmente relevante
                para contenidos que se cargan en aplicaciones Flash y Adobe PDF,
                y ayuda a prevenir ataques de secuencias de comandos (scripts)
                entre dominios.
            referrer-policy:
              schema:
                type: string
              example: strict-origin-when-cross-origin
              description: >-
                Esta cabecera controla qué información sobre el referer (o
                referente) de una solicitud HTTP es compartida con los sitios
                web de destino. Esto es útil para limitar los datos expuestos
                sobre el origen de la solicitud, mejorando la privacidad de los
                usuarios al evitar compartir la URL completa.
            permissions-policy:
              schema:
                type: string
              example: camera=(), microphone=(), geolocation=(), usb=(), midi=()
              description: >-
                Esta cabecera define qué APIs o funcionalidades del navegador
                (como ubicación, cámara, micrófono, etc.) están disponibles para
                el sitio web o los iframes de terceros. Controlar estas
                funciones ayuda a limitar la exposición de los datos del usuario
                y mitigar riesgos potenciales de privacidad y seguridad.
            content-security-policy:
              schema:
                type: string
              example: default-src 'self'; frame-ancestors 'self'; form-action 'self'
              description: >-
                Especifica una política de seguridad de contenido que controla
                qué recursos pueden cargarse en el contexto del documento
                actual. En este caso, se establece que ningún marco (iframes)
                puede ser cargado desde ningún origen ('none').
            message-id:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: >-
                      Message identifier or correlation identifier used for the
                      traceability of the API calls.
              example: d1f46c01-7d59-42a1-8171-633fd7d86cd6
              description: >-
                Identificador del mensaje o de correlación usado para la
                trazabilidad de los llamados a las APIs.
            content-type:
              schema:
                type: string
              example: application/json
              description: Content type de respuesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
              examples:
                InternalServerError:
                  value:
                    meta:
                      _messageId: c4e6bd04-5149-11e7-b114-b2f933d5fe68
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 500
                    title: Internal Server Error
                    errors:
                      - code: SP500
                        detail: Ha ocurrido un error interno controlado en el servidor
          description: Error interno del servidor.
          x-ibm-languages:
            description:
              en: Internal server error.
        '502':
          headers:
            api-version:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: API Version
              example: 1.0.0
              description: Versión de la API.
            rate-limit:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: Resquest limit per time interval.
              example: 150/1second
              description: Limite de solicitudes por intervalo de tiempo
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000; includesubdomains
              description: >-
                Establece una política de seguridad estricta de transporte
                (HSTS), lo que indica al navegador que solo debe acceder al
                sitio web a través de una conexión HTTPS segura durante un
                período de tiempo determinado (en este caso, 31536000 segundos,
                que es un año) y que incluya todos los subdominios (incluyendo
                subdominios).
            cache-control:
              schema:
                type: string
              example: private, no-cache, no-store, max-age=0, no-transform
              description: >-
                Indica al navegador web y a los intermediarios que no almacenen
                en caché ninguna versión de la respuesta, lo que significa que
                deben solicitar siempre una nueva copia al servidor.
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
              description: >-
                Esta cabecera establece una política que define si otros
                dominios pueden cargar recursos (como fuentes, contenido
                multimedia, etc.) desde tu servidor. Es especialmente relevante
                para contenidos que se cargan en aplicaciones Flash y Adobe PDF,
                y ayuda a prevenir ataques de secuencias de comandos (scripts)
                entre dominios.
            referrer-policy:
              schema:
                type: string
              example: strict-origin-when-cross-origin
              description: >-
                Esta cabecera controla qué información sobre el referer (o
                referente) de una solicitud HTTP es compartida con los sitios
                web de destino. Esto es útil para limitar los datos expuestos
                sobre el origen de la solicitud, mejorando la privacidad de los
                usuarios al evitar compartir la URL completa.
            permissions-policy:
              schema:
                type: string
              example: camera=(), microphone=(), geolocation=(), usb=(), midi=()
              description: >-
                Esta cabecera define qué APIs o funcionalidades del navegador
                (como ubicación, cámara, micrófono, etc.) están disponibles para
                el sitio web o los iframes de terceros. Controlar estas
                funciones ayuda a limitar la exposición de los datos del usuario
                y mitigar riesgos potenciales de privacidad y seguridad.
            content-security-policy:
              schema:
                type: string
              example: default-src 'self'; frame-ancestors 'self'; form-action 'self'
              description: >-
                Especifica una política de seguridad de contenido que controla
                qué recursos pueden cargarse en el contexto del documento
                actual. En este caso, se establece que ningún marco (iframes)
                puede ser cargado desde ningún origen ('none').
            message-id:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: >-
                      Message identifier or correlation identifier used for the
                      traceability of the API calls.
              example: d1f46c01-7d59-42a1-8171-633fd7d86cd6
              description: >-
                Identificador del mensaje o de correlación usado para la
                trazabilidad de los llamados a las APIs.
            content-type:
              schema:
                type: string
              example: application/json
              description: Content type de respuesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
              examples:
                BadGateway:
                  value:
                    meta:
                      _messageId: c4e6bd04-5149-11e7-b114-b2f933d5fe68
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 502
                    title: Bad Gateway
                    errors:
                      - code: SP502
                        detail: >-
                          El mensaje de respuesta recibido del servidor es
                          inválido
          description: Error en la respuesta del proveedor del servicio.
          x-ibm-languages:
            description:
              en: Error in the service provider response.
        '503':
          headers:
            api-version:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: API Version
              example: 1.0.0
              description: Versión de la API.
            rate-limit:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: Resquest limit per time interval.
              example: 150/1second
              description: Limite de solicitudes por intervalo de tiempo
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000; includesubdomains
              description: >-
                Establece una política de seguridad estricta de transporte
                (HSTS), lo que indica al navegador que solo debe acceder al
                sitio web a través de una conexión HTTPS segura durante un
                período de tiempo determinado (en este caso, 31536000 segundos,
                que es un año) y que incluya todos los subdominios (incluyendo
                subdominios).
            cache-control:
              schema:
                type: string
              example: private, no-cache, no-store, max-age=0, no-transform
              description: >-
                Indica al navegador web y a los intermediarios que no almacenen
                en caché ninguna versión de la respuesta, lo que significa que
                deben solicitar siempre una nueva copia al servidor.
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
              description: >-
                Esta cabecera establece una política que define si otros
                dominios pueden cargar recursos (como fuentes, contenido
                multimedia, etc.) desde tu servidor. Es especialmente relevante
                para contenidos que se cargan en aplicaciones Flash y Adobe PDF,
                y ayuda a prevenir ataques de secuencias de comandos (scripts)
                entre dominios.
            referrer-policy:
              schema:
                type: string
              example: strict-origin-when-cross-origin
              description: >-
                Esta cabecera controla qué información sobre el referer (o
                referente) de una solicitud HTTP es compartida con los sitios
                web de destino. Esto es útil para limitar los datos expuestos
                sobre el origen de la solicitud, mejorando la privacidad de los
                usuarios al evitar compartir la URL completa.
            permissions-policy:
              schema:
                type: string
              example: camera=(), microphone=(), geolocation=(), usb=(), midi=()
              description: >-
                Esta cabecera define qué APIs o funcionalidades del navegador
                (como ubicación, cámara, micrófono, etc.) están disponibles para
                el sitio web o los iframes de terceros. Controlar estas
                funciones ayuda a limitar la exposición de los datos del usuario
                y mitigar riesgos potenciales de privacidad y seguridad.
            content-security-policy:
              schema:
                type: string
              example: default-src 'self'; frame-ancestors 'self'; form-action 'self'
              description: >-
                Especifica una política de seguridad de contenido que controla
                qué recursos pueden cargarse en el contexto del documento
                actual. En este caso, se establece que ningún marco (iframes)
                puede ser cargado desde ningún origen ('none').
            message-id:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: >-
                      Message identifier or correlation identifier used for the
                      traceability of the API calls.
              example: d1f46c01-7d59-42a1-8171-633fd7d86cd6
              description: >-
                Identificador del mensaje o de correlación usado para la
                trazabilidad de los llamados a las APIs.
            content-type:
              schema:
                type: string
              example: application/json
              description: Content type de respuesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
              examples:
                ServiceUnavailable:
                  value:
                    meta:
                      _messageId: c4e6bd04-5149-11e7-b114-b2f933d5fe68
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 503
                    title: Service Unavailable
                    errors:
                      - code: SP503
                        detail: >-
                          Por problemas técnicos su transacción no pudo
                          atenderse en estos momentos, por favor intente más
                          tarde
          description: Servicio no disponible.
          x-ibm-languages:
            description:
              en: Service unavailable.
        '504':
          headers:
            api-version:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: API Version
              example: 1.0.0
              description: Versión de la API.
            rate-limit:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: Resquest limit per time interval.
              example: 150/1second
              description: Limite de solicitudes por intervalo de tiempo
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000; includesubdomains
              description: >-
                Establece una política de seguridad estricta de transporte
                (HSTS), lo que indica al navegador que solo debe acceder al
                sitio web a través de una conexión HTTPS segura durante un
                período de tiempo determinado (en este caso, 31536000 segundos,
                que es un año) y que incluya todos los subdominios (incluyendo
                subdominios).
            cache-control:
              schema:
                type: string
              example: private, no-cache, no-store, max-age=0, no-transform
              description: >-
                Indica al navegador web y a los intermediarios que no almacenen
                en caché ninguna versión de la respuesta, lo que significa que
                deben solicitar siempre una nueva copia al servidor.
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
              description: >-
                Esta cabecera establece una política que define si otros
                dominios pueden cargar recursos (como fuentes, contenido
                multimedia, etc.) desde tu servidor. Es especialmente relevante
                para contenidos que se cargan en aplicaciones Flash y Adobe PDF,
                y ayuda a prevenir ataques de secuencias de comandos (scripts)
                entre dominios.
            referrer-policy:
              schema:
                type: string
              example: strict-origin-when-cross-origin
              description: >-
                Esta cabecera controla qué información sobre el referer (o
                referente) de una solicitud HTTP es compartida con los sitios
                web de destino. Esto es útil para limitar los datos expuestos
                sobre el origen de la solicitud, mejorando la privacidad de los
                usuarios al evitar compartir la URL completa.
            permissions-policy:
              schema:
                type: string
              example: camera=(), microphone=(), geolocation=(), usb=(), midi=()
              description: >-
                Esta cabecera define qué APIs o funcionalidades del navegador
                (como ubicación, cámara, micrófono, etc.) están disponibles para
                el sitio web o los iframes de terceros. Controlar estas
                funciones ayuda a limitar la exposición de los datos del usuario
                y mitigar riesgos potenciales de privacidad y seguridad.
            content-security-policy:
              schema:
                type: string
              example: default-src 'self'; frame-ancestors 'self'; form-action 'self'
              description: >-
                Especifica una política de seguridad de contenido que controla
                qué recursos pueden cargarse en el contexto del documento
                actual. En este caso, se establece que ningún marco (iframes)
                puede ser cargado desde ningún origen ('none').
            message-id:
              schema:
                type: string
                x-ibm-languages:
                  description:
                    en: >-
                      Message identifier or correlation identifier used for the
                      traceability of the API calls.
              example: d1f46c01-7d59-42a1-8171-633fd7d86cd6
              description: >-
                Identificador del mensaje o de correlación usado para la
                trazabilidad de los llamados a las APIs.
            content-type:
              schema:
                type: string
              example: application/json
              description: Content type de respuesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
              examples:
                GatewayTimeout:
                  value:
                    meta:
                      _messageId: c4e6bd04-5149-11e7-b114-b2f933d5fe68
                      _requestDateTime: '2024-04-09T14:43:09.779-05:00'
                      _applicationId: acxff62e-6f12-42de-9012-3e7304418abd
                    status: 504
                    title: Gateway Timeout
                    errors:
                      - code: SP504
                        detail: El proveedor no respondió en tiempo esperado
          description: Tiempo de respuesta del proveedor del servicio excedido.
          x-ibm-languages:
            description:
              en: Service provider response time exceeded.
      security:
        - clientSecret: []
          clientId: []
      operationId: initiatePayment
      summary: >-
        Esta operación permite iniciar el proceso de pago uno a uno  para
        nomina, proveedores o terceros
      description: >-
        ### Clasificación de la información: Confidencial 


        Esta operación permite iniciar el proceso de pago individual para
        nómina, proveedores o terceros. Para consumir la API, se debe
        proporcionar la información del deudor, el acreedor y los detalles del
        pago, incluyendo el monto y la cuenta de destino. La operación se
        considerará exitosa si la información suministrada es válida y cumple
        con los requisitos establecidos.
      x-api-type: proxy-jwt
      x-microcks-operation:
        dispatcher: SCRIPT
        dispatcherRules: >-
          def jsonSlurper = new groovy.json.JsonSlurper();

          def requestJSON = jsonSlurper.parseText(mockRequest.requestContent);

          def procesoExitosoPagoIniciadoBeneficiarioInscrito =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-01-19T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"9988000001","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202501011001","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"ClientSecrect","Val":"CST1a2s3d"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"7350050.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo@ejmp.com","MobNb":"+57-3001230001"},"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"CC"}}}},"Nm":"Luis
          Uno"},"CdtrAcct":{"Cd":"SVGS","Id":{"Othr":{"Id":"115000001231"}},"SchmNm":{"Cd":"luno@ejemplo.com"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"1086"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_1"},"RmtInf":{"Ustrd":"190.00.1.1"},"PmtTpInf":{"CtgyPurp":{"Prtry":"225"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"00","SchmeNm":{"Cd":"CC"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"9918000001","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"225000001236"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          NOMINA EMPRESA
          UNO","PmtMtd":"TRF","ReqExctnDt":"2025-01-30T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Tarifa
          - Plus","Val":"Plus"},"PlcAndNm":"Cobro de transacción"}}}}');

          if (requestJSON == procesoExitosoPagoIniciadoBeneficiarioInscrito) {
            return "procesoExitosoPagoIniciadoBeneficiarioInscrito";
          }

          def procesoExitosoPagoIniciadoBeneficiarioNoInscrito =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-02-19T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"9988000002","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202501011002","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"ClientId","Val":"CI11s22s"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"325000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemp@ejmp.com","MobNb":"+57-3001230002"},"Id":{"PrvtId":{"Othr":{"Id":"1088000002","SchmeNm":{"Cd":"CC"}}}},"Nm":"Juan
          Perez"},"CdtrAcct":{"Cd":"SVGS","Id":{"Othr":{"Id":"115000001232"}},"SchmNm":{"Cd":"00"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_2"},"RmtInf":{"Ustrd":"190.00.1.2"},"PmtTpInf":{"CtgyPurp":{"Prtry":"225"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"00","SchmeNm":{"Cd":"CC"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"9918000002","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"225000001232"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          NOMINA EMPRESA
          DOS","PmtMtd":"TRF","ReqExctnDt":"2025-01-30T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Tarifa
          - Escencial","Val":"Cobro"},"PlcAndNm":"Información adicional"}}}}');

          if (requestJSON == procesoExitosoPagoIniciadoBeneficiarioNoInscrito) {
            return "procesoExitosoPagoIniciadoBeneficiarioNoInscrito";
          }

          def procesoExitosoPagoIniciadoPagadorDirectoBenificiarioInscrito =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-01-07T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"9988000003","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202501011003","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"ClientSecret","Val":"11s11"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"1409000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo3@ejmp.com","MobNb":"+57-3001230003"},"Id":{"PrvtId":{"Othr":{"Id":"9188000003","SchmeNm":{"Cd":"NIT"}}}},"Nm":"Empresa
          Tres"},"CdtrAcct":{"Cd":"SVGS","Id":{"Othr":{"Id":"115000001233"}},"SchmNm":{"Cd":"00"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"1087"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_3"},"RmtInf":{"Ustrd":"190.00.1.3"},"PmtTpInf":{"CtgyPurp":{"Prtry":"225"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"00","SchmeNm":{"Cd":"CC"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"9988000003","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"225000001233"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          NOMINA EMPRESA
          TRES","PmtMtd":"TRF","ReqExctnDt":"2025-01-30T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Tarifa","Val":"Plus"},"PlcAndNm":"Información
          adicional"}}}}');

          if (requestJSON ==
          procesoExitosoPagoIniciadoPagadorDirectoBenificiarioInscrito) {
            return "procesoExitosoPagoIniciadoPagadorDirectoBenificiarioInscrito";
          }

          def procesoExitosoPagoIniciadoPagadorDirectoBenificiarioNoInscrito =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-02-19T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"9988000004","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202403041004","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"ClientId","Val":"aa123ss"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"22500000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo4@ejmp.com","MobNb":"+57-3001230004"},"Id":{"PrvtId":{"Othr":{"Id":"9188000004","SchmeNm":{"Cd":"NIT"}}}},"Nm":"Proveedor
          Cuatro"},"CdtrAcct":{"Cd":"SVGS","Id":{"Othr":{"Id":"221000001234"}},"SchmNm":{"Cd":"email@mail.com"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"1051"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_CUATRO"},"RmtInf":{"Ustrd":"190.00.1.4"},"PmtTpInf":{"CtgyPurp":{"Prtry":"220"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"123","SchmeNm":{"Cd":"CC"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"9988000004","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"225000001234"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          PROVEEDORES","PmtMtd":"TRF","ReqExctnDt":"2025-02-19T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Tarifa","Val":"Plus"},"PlcAndNm":"Cobro
          adicional"}}}}');

          if (requestJSON ==
          procesoExitosoPagoIniciadoPagadorDirectoBenificiarioNoInscrito) {
            return "procesoExitosoPagoIniciadoPagadorDirectoBenificiarioNoInscrito";
          }

          def procesoExitosoPagoIniciadoEnNombreDeudorBeneficiarioInscrito =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-01-19T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"9288000005","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202403041005","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"ClientId","Val":"Id123455"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"1409000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo5@ejmp.com","MobNb":"+57-3001230005"},"Id":{"PrvtId":{"Othr":{"Id":"1088000005","SchmeNm":{"Cd":"CC"}}}},"Nm":"Tito
          Perez"},"CdtrAcct":{"Cd":"IKEY","Id":{"Othr":{"Id":"00"}},"SchmNm":{"Cd":"tito123@gmail.com"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"0000"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_5"},"RmtInf":{"Ustrd":"190.00.1.5"},"PmtTpInf":{"CtgyPurp":{"Prtry":"238"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"00","SchmeNm":{"Cd":"CC"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"9988000005","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"225000001235"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          TERCEROS","PmtMtd":"TRF","ReqExctnDt":"2025-01-30T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Tarifa","Val":"Plus"},"PlcAndNm":"Información
          adicional"}}}}');

          if (requestJSON ==
          procesoExitosoPagoIniciadoEnNombreDeudorBeneficiarioInscrito) {
            return "procesoExitosoPagoIniciadoEnNombreDeudorBeneficiarioInscrito";
          }

          def procesoExitosoPagoIniciadoEnNombreDeudorBeneficiarioNoInscrito =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-02-19T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"9928000006","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202403041006","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"ClientSecret","Val":"CSA1234"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"1409000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo6@ejmp.com","MobNb":"+57-3001230006"},"Id":{"PrvtId":{"Othr":{"Id":"1088000006","SchmeNm":{"Cd":"CC"}}}},"Nm":"Oscar
          Seis"},"CdtrAcct":{"Cd":"CHEK","Id":{"Othr":{"Id":"00"}},"SchmNm":{"Cd":"00"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_6"},"RmtInf":{"Ustrd":"190.00.1.6"},"PmtTpInf":{"CtgyPurp":{"Prtry":"225"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000066","SchmeNm":{"Cd":"CC"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"9988000006","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"225000001236"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          NOMINA EMPRESA
          SEIS","PmtMtd":"TRF","ReqExctnDt":"2025-02-30T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Tarifa","Val":"Valor"},"PlcAndNm":"Información
          adicional"}}}}');

          if (requestJSON ==
          procesoExitosoPagoIniciadoEnNombreDeudorBeneficiarioNoInscrito) {
            return "procesoExitosoPagoIniciadoEnNombreDeudorBeneficiarioNoInscrito";
          }

          def procesoFallidoDeudorNoExiste =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-02-19T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202403041001","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"1409000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo@ejmp.com","MobNb":"+57-3001230000"},"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}},"Nm":"Juan
          Perez"},"CdtrAcct":{"Cd":"SVGS","Id":{"Othr":{"Id":"115000001236"}},"SchmNm":{"Cd":"email@banco.com"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_1"},"RmtInf":{"Ustrd":"190.00.1.1"},"PmtTpInf":{"CtgyPurp":{"Prtry":"238"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"1234561111","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"115000001236"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          NOMINA EMPRESA
          UNO","PmtMtd":"TRF","ReqExctnDt":"2025-02-19T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}}}}');

          if (requestJSON == procesoFallidoDeudorNoExiste) {
            return "procesoFallidoDeudorNoExiste";
          }

          def procesoFallidoAcreedorNoInscrito =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-03-19T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202403041001","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"1409000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo@ejmp.com","MobNb":"+57-3001230000"},"Id":{"PrvtId":{"Othr":{"Id":"1111111111","SchmeNm":{"Cd":"NIT"}}}},"Nm":"Juan
          Perez"},"CdtrAcct":{"Cd":"SVGS","Id":{"Othr":{"Id":"115000001236"}},"SchmNm":{"Cd":"email@banco.com"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_8"},"RmtInf":{"Ustrd":"190.00.1.1"},"PmtTpInf":{"CtgyPurp":{"Prtry":"238"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"115000001236"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          NOMINA EMPRESA
          OCHO","PmtMtd":"TRF","ReqExctnDt":"2025-02-19T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}}}}');

          if (requestJSON == procesoFallidoAcreedorNoInscrito) {
            return "procesoFallidoAcreedorNoInscrito";
          }

          def procesoFallidoCuentaDeudoraNoActiva =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-02-27T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202403041009","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"1409000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo@ejmp.com","MobNb":"+57-3001230000"},"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}},"Nm":"Juan
          Perez"},"CdtrAcct":{"Cd":"SVGS","Id":{"Othr":{"Id":"115000001236"}},"SchmNm":{"Cd":"email@banco.com"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_9"},"RmtInf":{"Ustrd":"190.00.1.1"},"PmtTpInf":{"CtgyPurp":{"Prtry":"238"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"11111111111118"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          NOMINA EMPRESA
          NUEVE","PmtMtd":"TRF","ReqExctnDt":"2025-02-28T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}}}}');

          if (requestJSON == procesoFallidoCuentaDeudoraNoActiva) {
            return "procesoFallidoCuentaDeudoraNoActiva";
          }

          def procesoFallidoCuentaOrigenSinFondos =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-03-19T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202403041001","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"1409000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo@ejmp.com","MobNb":"+57-3001230000"},"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}},"Nm":"Juan
          Perez"},"CdtrAcct":{"Cd":"SVGS","Id":{"Othr":{"Id":"115000001236"}},"SchmNm":{"Cd":"email@banco.com"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_1"},"RmtInf":{"Ustrd":"190.00.1.1"},"PmtTpInf":{"CtgyPurp":{"Prtry":"238"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"115000001236"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          NOMINA EMPRESA
          UNO","PmtMtd":"TRF","ReqExctnDt":"2025-03-25T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}}}}');

          if (requestJSON == procesoFallidoCuentaOrigenSinFondos) {
            return "procesoFallidoCuentaOrigenSinFondos";
          }

          def procesoFallidoCuentaOrigenNoExiste =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-02-19T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202403041001","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"1409000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo@ejmp.com","MobNb":"+57-3001230000"},"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}},"Nm":"Juan
          Perez"},"CdtrAcct":{"Cd":"SVGS","Id":{"Othr":{"Id":"115000001236"}},"SchmNm":{"Cd":"email@banco.com"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_1"},"RmtInf":{"Ustrd":"190.00.1.1"},"PmtTpInf":{"CtgyPurp":{"Prtry":"238"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"1150000010"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          NOMINA EMPRESA
          UNO","PmtMtd":"TRF","ReqExctnDt":"2025-02-19T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}}}}');

          if (requestJSON == procesoFallidoCuentaOrigenNoExiste) {
            return "procesoFallidoCuentaOrigenNoExiste";
          }

          def procesoFallidoTopeTransaccionalSuperado =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-02-19T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202403041001","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"1409000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo@ejmp.com","MobNb":"+57-3001230000"},"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}},"Nm":"Juan
          Perez"},"CdtrAcct":{"Cd":"SVGS","Id":{"Othr":{"Id":"115000001236"}},"SchmNm":{"Cd":"email@banco.com"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_1"},"RmtInf":{"Ustrd":"190.00.1.1"},"PmtTpInf":{"CtgyPurp":{"Prtry":"238"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"115000001236"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          NOMINA EMPRESA
          UNO","PmtMtd":"TRF","ReqExctnDt":"2025-02-19T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}}}}');

          if (requestJSON == procesoFallidoTopeTransaccionalSuperado) {
            return "procesoFallidoTopeTransaccionalSuperado";
          }

          def procesoFallidoCuentaDestinoNoActiva =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-02-19T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202403041001","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"1409000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo@ejmp.com","MobNb":"+57-3001230000"},"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}},"Nm":"Juan
          Perez"},"CdtrAcct":{"Cd":"SVGS","Id":{"Othr":{"Id":"0123456"}},"SchmNm":{"Cd":"email@banco.com"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_1"},"RmtInf":{"Ustrd":"190.00.1.1"},"PmtTpInf":{"CtgyPurp":{"Prtry":"238"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"115000001236"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          NOMINA EMPRESA
          UNO","PmtMtd":"TRF","ReqExctnDt":"2025-02-19T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}}}}');

          if (requestJSON == procesoFallidoCuentaDestinoNoActiva) {
            return "procesoFallidoCuentaDestinoNoActiva";
          }

          def procesoFallidoCuentaDestinoNoPermiteCreditos =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-02-19T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202403041001","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"1409000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo@ejmp.com","MobNb":"+57-3001230000"},"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}},"Nm":"Juan
          Perez"},"CdtrAcct":{"Cd":"SVGS","Id":{"Othr":{"Id":"23456789"}},"SchmNm":{"Cd":"email@banco.com"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_1"},"RmtInf":{"Ustrd":"190.00.1.1"},"PmtTpInf":{"CtgyPurp":{"Prtry":"238"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"115000001236"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          NOMINA EMPRESA
          UNO","PmtMtd":"TRF","ReqExctnDt":"2025-02-19T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}}}}');

          if (requestJSON == procesoFallidoCuentaDestinoNoPermiteCreditos) {
            return "procesoFallidoCuentaDestinoNoPermiteCreditos";
          }

          def procesoFallidoCodigoBancoNoExiste =
          jsonSlurper.parseText('{"data":{"CstmrCdtTrfInitn":{"GrpHdr":{"CredtTm":"2025-02-19T09:30:15.123-05:00","InitgPty":{"InitgPty":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"InitnSrc":{"Nm":"CRP"},"MsgId":"MSG-202403041001","NbOfTxs":"1","SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}},"PmtInf":{"CdtTrfTxInf":{"Amt":{"InstdAmt":{"Amt":"1409000.00","Ccy":"COP"}},"Cdtr":{"CtctDtls":{"EmailAdr":"ejemplo@ejmp.com","MobNb":"+57-3001230000"},"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}},"Nm":"Juan
          Perez"},"CdtrAcct":{"Cd":"SVGS","Id":{"Othr":{"Id":"115000001236"}},"SchmNm":{"Cd":"email@banco.com"}},"CdtrAgt":{"FinInstnId":{"Othr":{"Id":"0000"}}},"PmtId":{"EndToEndId":"NOMBRE_PAGO_1"},"RmtInf":{"Ustrd":"190.00.1.1"},"PmtTpInf":{"CtgyPurp":{"Prtry":"238"}},"UltmtCdtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}}},"Dbtr":{"Id":{"PrvtId":{"Othr":{"Id":"1088000001","SchmeNm":{"Cd":"NIT"}}}}},"DbtrAcct":{"Id":{"Othr":{"Id":"115000001236"}},"Tp":{"Cd":{"XtrnlCshAcctTp1Cd":"CACC"}}},"DbtrAgt":{"FinInstnId":{"Othr":{"Id":"1007"}}},"PmtInfId":"PAGO
          NOMINA EMPRESA
          UNO","PmtMtd":"TRF","ReqExctnDt":"2025-02-19T09:30:15.123-05:00"},"SplmtryData":{"Envlp":{"Key":"Llave","Val":"Valor"},"PlcAndNm":"Información
          adicional"}}}}');

          if (requestJSON == procesoFallidoCodigoBancoNoExiste) {
            return "procesoFallidoCodigoBancoNoExiste";
          }

          return "DefaultResponse";
components:
  schemas:
    meta:
      description: Datos de trazabilidad e información técnica del mensaje.
      required:
        - _applicationId
        - _messageId
        - _requestDateTime
      type: object
      properties:
        _messageId:
          type: string
          example: 56d6adc5-b25a-4d75-a663-56a62bad4982
        _requestDateTime:
          format: date-time
          type: string
          example: '2024-04-09T14:43:09.779-05:00'
        _applicationId:
          type: string
          example: acxff62e-6f12-42de-9012-3e7304418abd
    failure:
      description: Mensaje de respuesta cuando ocurre un error.
      required:
        - errors
        - meta
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/meta'
        status:
          description: >-
            Codigo de estado HTTP (status code) asociado al mensaje de error
            de            la respuesta del llamado a la API.
          type: number
          example: 404
        title:
          description: >-
            Titulo asociado al codigo de estado HTTP (status code) asociado
            al            mensaje de error de la respuesta del llamado a la API.
          type: string
          example: Not Found
        errors:
          description: Lista de errores detectados
          type: array
          items:
            $ref: '#/components/schemas/error'
    error:
      required:
        - code
        - detail
      type: object
      properties:
        code:
          description: An application-specific error code, expressed as a string value.
          type: string
          example: BP404
        detail:
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
          type: string
          example: Requested resource could not be found
    initiatePaymentRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inititatePaymentRequestData'
    PersonIdentificationSchemeName1Choice:
      required:
        - Cd
      type: object
      properties:
        Cd:
          description: |-
            Tipo de identificación que se manejan en Colombia

            * `CC` - CEDULA DE CIUDADANIA
            * `CE` - CEDULA DE EXTRANJERIA
            * `PA` - PASAPORTE
            * `PPT`- PERMISO DE PROTECCIÓN TEMPORAL
            * `IEPN`- ID EXTRANJERO PERSONA NATURAL NO RESIDENTE EN COLOMBIA
            * `CD` - CARNET DIPLOMATICO
            * `NIT`- NIT
            * `TI`- TARJETA DE IDENTIDAD
            * `IEPJ`- ID EXTRANJERO PERSONA JURIDICA NO RESIDENTE EN COLOMBIA
            * `FD`- FIDECOMISO
            * `RC`- REGISTRO CIVIL
          maxLength: 4
          minLength: 1
          enum:
            - CC
            - CE
            - PA
            - PPT
            - IEPN
            - CD
            - NIT
            - TI
            - IEPJ
            - FD
            - RC
          type: string
          example: NIT
    PersonIdentification18:
      required:
        - Othr
      type: object
      properties:
        Othr:
          $ref: '#/components/schemas/GenericPersonIdentification2'
    Party52Choice:
      required:
        - PrvtId
      type: object
      properties:
        PrvtId:
          $ref: '#/components/schemas/PersonIdentification18'
    PaymentInitiationSource1:
      description: Aplicación o software de origen utilizado para iniciar el pago
      required:
        - Nm
      type: object
      properties:
        Nm:
          description: >-
            `Name` Nombre del consumidor que iniciará el pago. En este caso se
            tomará como el nombre del canal
          maxLength: 3
          minLength: 1
          type: string
          example: CRP
    inititatePaymentRequestData:
      description: Información de proceso de pago
      required:
        - CstmrCdtTrfInitn
      type: object
      properties:
        CstmrCdtTrfInitn:
          $ref: '#/components/schemas/CustomerCreditTransferInititationV12'
    GenericPersonIdentification2:
      description: Tipo y número de identificación de una persona u organización
      required:
        - SchmeNm
        - Id
      type: object
      properties:
        Id:
          description: >-
            `Identification` Número de identificación de una persdona u
            organización.
          maxLength: 35
          minLength: 1
          type: string
          example: '1088000001'
        SchmeNm:
          $ref: '#/components/schemas/PersonIdentificationSchemeName1Choice'
    GenericAccountIdentification1:
      required:
        - Id
      type: object
      properties:
        Id:
          description: >-
            `Identification` Número de cuenta o identificación única e
            inequívoca de la cuenta entre el titular de la cuenta y el
            administrador de la cuenta.
          maxLength: 35
          minLength: 1
          type: string
          example: '115000001236'
    PaymentTypeInformation26:
      type: object
      properties:
        CtgyPurp:
          $ref: '#/components/schemas/CategoryPuspose1Choice'
    BranchAndFinancialInstitutionIdentification8:
      description: Identificación del banco
      required:
        - FinInstnId
      type: object
      properties:
        FinInstnId:
          $ref: '#/components/schemas/FinancialInstitutionIdentification23'
    PaymentIdentification:
      description: >-
        Conjunto de elementos utilizados para hacer referencia a una instrucción
        de pago.
      required:
        - EndToEndId
      type: object
      properties:
        EndToEndId:
          description: >-
            `EndToEndIdentification` Id de la transacción, referencia del pago
            asignado por el cliente (Nombre Instrucción Pago)
          maxLength: 35
          minLength: 1
          type: string
          example: NOMBRE_PAGO_1
    OriginalGroupHeader22:
      description: Información de grupo original del proceso de pago (Pain.001)
      required:
        - OrgnlMsgId
        - OrgnlMsgNmId
      type: object
      properties:
        OrgnlMsgId:
          description: >-
            `OriginalMessageIdentification` Identificación unica del proceso de
            pago designado por el consumidor interno del banco para identificar
            inequívocamente el mensaje (Id transacción).
          maxLength: 35
          minLength: 1
          type: string
          example: MSG-1521454
        OrgnlMsgNmId:
          description: >-
            `OriginalMessageNameIdentification` Contiene el tipo de mensaje ISO
            20022 recibido. Para un pain.002 que responde a un pain.001, el
            valor será "pain.001.001.12" o la versión específica usada.
          maxLength: 35
          minLength: 1
          type: string
          example: pain.001.001.12
    CustomerPaymentStatusReportV14:
      required:
        - GrpHdr
        - OrgnlGrpHdr
        - OrgnlPmtInfAndSts
      type: object
      properties:
        GrpHdr:
          $ref: '#/components/schemas/GroupHeader128'
        OrgnlGrpHdr:
          $ref: '#/components/schemas/OriginalGroupHeader22'
        OrgnlPmtInfAndSts:
          $ref: '#/components/schemas/OriginalPaymentInstruction51'
    CustomerCreditTransferInititationV12:
      description: >-
        Este mensaje es enviado por la parte iniciadora al transportista o
        agente deudor. Se utiliza para solicitar el movimiento de fondos de la
        cuenta del deudor a un acreedor.
      required:
        - GrpHdr
        - PmtInf
      type: object
      properties:
        GrpHdr:
          $ref: '#/components/schemas/GroupHeader114'
        PmtInf:
          $ref: '#/components/schemas/PaymentInstruction44'
        SplmtryData:
          $ref: '#/components/schemas/SuppementaryData1'
    ExternalCashAccountType1Code:
      required:
        - XtrnlCshAcctTp1Cd
      type: object
      properties:
        XtrnlCshAcctTp1Cd:
          description: >-
            Tipo de cuenta


            * `ACCT` - CUENTA CONTABLE

            * `CACC` - CUENTA CORRIENTE (Current)

            * `CASH` - PAGO EN EEFECTIVO (CashPayment)

            * `CCAR` - TARJETA CREDITO

            * `OTHR` - OTRA CUENTA (OtherAccount)

            * `SVGS` - AHORROS (Savings)

            * `TRAN` - CUENTA TRANSACCIONAL (TransactingAccount)

            * `TRAS` - OPERACIONES EN EFECTIVO (CashTrading)

            * `VACC` - CUENTA VIRTUAL (VirtualAccount)

            * `NFCA` - CUENTA DE MONEDA EXTRANJERA PARA NO RESIDENTES
            (NonResidentForeignCurrencyAccount)
          maxLength: 4
          minLength: 1
          type: string
          example: CACC
    FinancialIdentificationSchemeName1Choice:
      required:
        - Cd
      type: object
      properties:
        Cd:
          description: |-
            Identificación unica e inequívoca de un banco (Código de banco).
            * `1059` - BANCAMIA S.A
            * `1040` - BANCO AGRARIO
            * `1052` - BANCO AV VILLAS
            * `1805` - BANCO BTG PACTUAL
            * `1032` - BANCO CAJA SOCIAL BCSC SA
            * `1819` - BANCO CONTACTAR S.A.
            * `1066` - BANCO COOPERATIVO COOPCENTRAL
            * `1558` - BANCO CREDIFINANCIERA SA.
            * `1051` - BANCO DAVIVIENDA SA
            * `1001` - BANCO DE BOGOTA
            * `1023` - BANCO DE OCCIDENTE
            * `1062` - BANCO FALABELLA S.A.
            * `1063` - BANCO FINANDINA S.A.
            * `1012` - BANCO GNB SUDAMERIS
            * `1071` - BANCO J.P. MORGAN COLOMBIA S.A
            * `1047` - BANCO MUNDO MUJER
            * `1060` - BANCO PICHINCHA
            * `1002` - BANCO POPULAR
            * `1065` - BANCO SANTANDER DE NEGOCIOS CO
            * `1069` - BANCO SERFINANZA S.A
            * `1303` - BANCO UNION S.A
            * `1053` - BANCO W S.A
            * `1031` - BANCOLDEX S.A.
            * `1007` - BANCOLOMBIA
            * `1061` - BANCOOMEVA
            * `1013` - BBVA COLOMBIA
            * `1808` - BOLD CF
            * `1009` - CITIBANK
            * `1812` - COINK
            * `1370` - COLTEFINANCIERA S.A
            * `1292` - CONFIAR COOPERATIVA FINANCIERA
            * `1283` - COOPERATIVA FINANCIERA DE ANTI
            * `1289` - COOTRAFA COOPERATIVA FINANCIER
            * `1551` - DAVIPLATA
            * `1802` - DING TECNIPAGOS SA
            * `1121` - FINANCIERA JURISCOOP S.A. COMP
            * `1814` - GLOBAL66
            * `1637` - IRIS
            * `1014` - ITAU
            * `1006` - ITAU antes Corpbanca
            * `1286` - JFK COOPERATIVA FINANCIERA
            * `1070` - LULO BANK S.A.
            * `1067` - MIBANCO S.A.
            * `1801` - MOVII
            * `1507` - NEQUI
            * `1809` - NU
            * `1560` - PIBANK
            * `1803` - POWWI
            * `1811` - RAPPIPAY
            * `1019` - SCOTIABANK COLPATRIA S.A
            * `1804` - Ualá
          maxLength: 4
          minLength: 1
          enum:
            - '1001'
            - '1002'
            - '1006'
            - '1007'
            - '1009'
            - '1012'
            - '1013'
            - '1014'
            - '1019'
            - '1023'
            - '1031'
            - '1032'
            - '1040'
            - '1047'
            - '1051'
            - '1052'
            - '1053'
            - '1059'
            - '1060'
            - '1061'
            - '1062'
            - '1063'
            - '1065'
            - '1066'
            - '1067'
            - '1069'
            - '1070'
            - '1071'
            - '1121'
            - '1283'
            - '1286'
            - '1289'
            - '1292'
            - '1303'
            - '1370'
            - '1507'
            - '1551'
            - '1558'
            - '1560'
            - '1637'
            - '1801'
            - '1802'
            - '1803'
            - '1804'
            - '1805'
            - '1808'
            - '1809'
            - '1811'
            - '1812'
            - '1814'
            - '1819'
          type: string
          example: '1007'
    FinancialInstitutionIdentification23:
      required:
        - Othr
      type: object
      properties:
        Othr:
          $ref: '#/components/schemas/GenericFinancialIdentification1'
    GenericFinancialIdentification1:
      required:
        - Id
      type: object
      properties:
        Id:
          description: >-
            `Identification` Identificación unica e inequívoca de un banco
            (Código de banco).


            * `1059` - BANCAMIA S.A

            * `1040` - BANCO AGRARIO

            * `1052` - BANCO AV VILLAS

            * `1805` - BANCO BTG PACTUAL

            * `1032` - BANCO CAJA SOCIAL BCSC SA

            * `1819` - BANCO CONTACTAR S.A.

            * `1066` - BANCO COOPERATIVO COOPCENTRAL

            * `1558` - BANCO CREDIFINANCIERA SA.

            * `1051` - BANCO DAVIVIENDA SA

            * `1001` - BANCO DE BOGOTA

            * `1023` - BANCO DE OCCIDENTE

            * `1062` - BANCO FALABELLA S.A.

            * `1063` - BANCO FINANDINA S.A.

            * `1012` - BANCO GNB SUDAMERIS

            * `1071` - BANCO J.P. MORGAN COLOMBIA S.A

            * `1047` - BANCO MUNDO MUJER

            * `1060` - BANCO PICHINCHA

            * `1002` - BANCO POPULAR

            * `1065` - BANCO SANTANDER DE NEGOCIOS CO

            * `1069` - BANCO SERFINANZA S.A

            * `1303` - BANCO UNION S.A

            * `1053` - BANCO W S.A

            * `1031` - BANCOLDEX S.A.

            * `1007` - BANCOLOMBIA

            * `1061` - BANCOOMEVA

            * `1013` - BBVA COLOMBIA

            * `1808` - BOLD CF

            * `1009` - CITIBANK

            * `1812` - COINK

            * `1370` - COLTEFINANCIERA S.A

            * `1292` - CONFIAR COOPERATIVA FINANCIERA

            * `1283` - COOPERATIVA FINANCIERA DE ANTI

            * `1289` - COOTRAFA COOPERATIVA FINANCIER

            * `1551` - DAVIPLATA

            * `1802` - DING TECNIPAGOS SA

            * `1121` - FINANCIERA JURISCOOP S.A. COMP

            * `1814` - GLOBAL66

            * `1637` - IRIS

            * `1014` - ITAU

            * `1006` - ITAU antes Corpbanca

            * `1286` - JFK COOPERATIVA FINANCIERA

            * `1070` - LULO BANK S.A.

            * `1067` - MIBANCO S.A.

            * `1801` - MOVII

            * `1507` - NEQUI

            * `1809` - NU

            * `1560` - PIBANK

            * `1803` - POWWI

            * `1811` - RAPPIPAY

            * `1019` - SCOTIABANK COLPATRIA S.A

            * `1804` - Ualá
          maxLength: 4
          minLength: 1
          type: string
          example: '1007'
    OriginalPaymentInstruction51:
      required:
        - TxInfAndSts
        - OrgnlPmtInfId
      type: object
      properties:
        TxInfAndSts:
          $ref: '#/components/schemas/PaymentTransaction160'
        OrgnlPmtInfId:
          description: >-
            `OriginalPaymentInformationIdentification` dentificación única,
            asignada por el deudor, para identificar inequívocamente el grupo de
            información de pago dentro del mensaje. Nombre del pago que el
            cliente asigna.
          maxLength: 35
          minLength: 1
          type: string
          example: PAGO NOMINA EMPRESA UNO
    PaymentTransaction160:
      required:
        - TxSts
        - StsRsnInf
        - OrgnlEndToEndId
      type: object
      properties:
        StsRsnInf:
          $ref: '#/components/schemas/StatusReasonInformation14'
        TxSts:
          description: >
            `TransactionStatus` Especifica el estado de una operación, tal como
            se publica en una lista externa de códigos de estado de operaciones
            de pago.

            * `PDNG` - Pendiente

            * `PRES` - Presentado

            * `RCVD` - Recibido

            * `RJCT` - Rechazado 
          maxLength: 4
          minLength: 1
          type: string
          example: RCVD
        OrgnlEndToEndId:
          description: >-
            `OriginalEndToEnd` Id de la transacción, referencia del pago
            asignado por el cliente (Nombre Instrucción Pago)
          maxLength: 35
          minLength: 1
          type: string
          example: NOMBRE_PAGO_1
    StatusReasonInformation14:
      required:
        - AddtlInf
      type: object
      properties:
        AddtlInf:
          description: >-
            Más detalles sobre el motivo del estado. En este caso se usa para
            agregar un código HTTP personalizado.
          maxLength: 3
          minLength: 1
          type: string
          example: '200'
    SuppementaryData1:
      description: >-
        Información adicional que no puede capturarse en los elementos
        estructurados y/o en cualquier otro

        bloque específico. Información adicional relevante como, firma del
        archivo, ClientId, ClientSercret, etc (Se utiliza para validación de
        seguridad para grupos empresariales que no pasan por BAAS.) o
        información relevante para la parte destino o información del plan del
        cobro como, plus o escensial.
      required:
        - Envlp
      type: object
      properties:
        Envlp:
          $ref: '#/components/schemas/SupplementaryDataEnvelope1'
        PlcAndNm:
          description: >-
            Referencia inequívoca a la ubicación en la que deben insertarse los
            datos suplementarios en la instancia de mensaje.
          maxLength: 350
          minLength: 1
          type: string
          example: Información adicional
    SupplementaryDataEnvelope1:
      required:
        - Key
        - Val
      type: object
      properties:
        Key:
          description: >-
            Identificador único que se usa para acceder a un valor en una
            estructura de datos
          maxLength: 35
          minLength: 1
          type: string
          example: Llave
        Val:
          description: >-
            Dato asociado a una llave, que puede ser de cualquier tipo (texto,
            número, lista, etc.).
          maxLength: 350
          minLength: 1
          type: string
          example: Valor
    unauthorizedObjetct:
      required:
        - httpCode
        - httpMessage
        - MoreInformation
      type: object
      properties:
        httpCode:
          type: string
        httpMessage:
          type: string
        MoreInformation:
          type: string
    initiatePaymentResponse:
      required:
        - meta
        - data
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/meta'
        data:
          $ref: '#/components/schemas/inititatePaymentResponseData'
    CashAccountType2Choice:
      required:
        - Cd
      type: object
      properties:
        Cd:
          $ref: '#/components/schemas/ExternalCashAccountType1Code'
    inititatePaymentResponseData:
      required:
        - CstmrPmtStsRpt
      type: object
      properties:
        CstmrPmtStsRpt:
          $ref: '#/components/schemas/CustomerPaymentStatusReportV14'
    PaymentInstruction44:
      description: >-
        Información de pago. Identificación, cuenta e institución bancaria de la
        parte que inicia el pago.

        Puede ser el deudor o la parte que inicia la transferencia en nombre del
        deudor (TPP).
      required:
        - PmtInfId
        - PmtMtd
        - ReqExctnDt
        - Dbtr
        - DbtrAcct
        - DbtrAgt
        - CdtTrfTxInf
      type: object
      properties:
        CdtTrfTxInf:
          $ref: '#/components/schemas/CreditTransferTransaction61'
        Dbtr:
          $ref: '#/components/schemas/PartyIdentification272'
        DbtrAcct:
          $ref: '#/components/schemas/CashAccount40'
        DbtrAgt:
          $ref: '#/components/schemas/BranchAndFinancialInstitutionIdentification8'
        PmtInfId:
          description: >-
            `PaymentInformationIdentification` Identificación única, asignada
            por el deudor, para identificar inequívocamente el grupo de
            información de pago dentro del mensaje. Nombre del pago que el
            cliente asigna.
          maxLength: 35
          minLength: 1
          type: string
          example: PAGO NOMINA EMPRESA UNO
        PmtMtd:
          description: >
            `PaymentMethod` Especifica el medio de pago que se utilizará para
            mover la cantidad de dinero


            * `CASH`- Efectivo

            * `CARD`- Recarga tarjeta prepago

            * `RGAC`- Inscripción de cuenta

            * `PRAC`- Prenotificación de cuenta

            * `WOAR`- Retiro de inscripción de cuenta

            * `CHK` - Cheque  

            * `TRF` - Transferencia bancaria - Pago con abono en cuenta 

            * `TRA` - Transferencia en red de pagos específica - Pagos
            interoperables a una llave
          maxLength: 4
          minLength: 1
          type: string
          example: TRF
        ReqExctnDt:
          format: date-time
          description: >-
            `RequestedExecutionDate` Fecha en la que la parte iniciadora
            solicita al agente de compensación que procese el pago. Fecha en la
            que se aplica el pago
          type: string
          example: '2025-02-19T09:30:15.123-05:00'
    Creditor:
      description: >-
        Información de identificación de la persona u organización a la cual se
        le debe realizar el pago. Parte a la que se debe una cantidad de dinero.
      required:
        - Nm
        - Id
      type: object
      properties:
        CtctDtls:
          $ref: '#/components/schemas/ContactDetails'
        Id:
          $ref: '#/components/schemas/Party52Choice'
        Nm:
          description: '`Name` Nombre que identifica a una persona u organización.'
          maxLength: 140
          minLength: 1
          type: string
          example: Juan Perez
    Locallnstrument2Choice:
      description: >-
        Permite identificar el tipo de abono o pago dentro de un esquema de
        pagos nacional o regional.
      required:
        - Prtry
      type: object
      properties:
        Prtry:
          description: |-
            Especifica el tipo de transacción.

            * `23` - PRENOTIFICACION CTA CTE  
            * `25` - PAGO POR VENTANILLA  
            * `26` - CHEQUE DE GERENCIA  
            * `27` - ABONO CUENTA CORRIENTE  
            * `28` - INSCRIPCION CUENTA CORRIENTE  
            * `33` - PRENOTIFICACION CTA AHORROS  
            * `36` - CHEQUES GERENCIA ENTREGA INDIVIDUAL  
            * `37` - ABONO A CUENTA DE AHORROS  
            * `40` - EFECTIVO SEGURO  
            * `99` - RECHAZOS POR TIPO TRANSACCION INVALIDO  
            * `38` - INSCRIPCION CUENTA DE AHORROS  
            * `10` - NOVEDAD DE INCUMPLIMIENTO DE SUPERVIVENCIA  
            * `11` - NOVEDAD DE CUMPLIMIENTO TOTAL DE SUPERVIVENCIA  
            * `29` - RETIRO INSCRIPCION CUENTA CORRIENTE  
            * `39` - RETIRO INSCRIPCION CUENTA AHORRO  
            * `53` - PRENOTIFICACION DEP ELEC  
            * `52` - ABONO DEP ELECT  
            * `58` - INSCRIPCION CUENTA DEP ELECTRONICO  
            * `59` - RETIRO INSCRIPCION DEP ELECTRONICO  
            * `35` - PAGO POR CORRESPONSAL BANCARIO
          maxLength: 140
          minLength: 1
          type: string
          example: '27'
    GroupHeader114:
      description: >-
        Conjunto de características compartidas por todas las transacciones
        individuales incluidas en el mensaje.
      required:
        - MsgId
        - CredtTm
        - NbOfTxs
        - InitnSrc
        - InitgPty
      type: object
      properties:
        CredtTm:
          format: date-time
          description: |-
            `CreationDateTime` Fecha y hora de creación del proceso de pago.
            Formato de hora UTC (AAAA-MM-DDThh:mm:ss.sssZ).
          type: string
          example: '2025-02-19T09:30:15.123-05:00'
        InitgPty:
          $ref: '#/components/schemas/InitiatingParty'
        InitnSrc:
          $ref: '#/components/schemas/PaymentInitiationSource1'
        MsgId:
          description: >-
            `MessageIdentification` Identificación unica del proceso de pago
            designado por el consumidor interno del banco para identificar
            inequívocamente el mensaje (Id transacción)
          maxLength: 35
          minLength: 1
          type: string
          example: MSG-202403041001
        NbOfTxs:
          description: >-
            `NumberOfTransactions` Número de transacciones individuales
            contenidas en el mensaje.
          maxLength: 15
          minLength: 1
          pattern: '[0-9]{1,15}'
          type: string
          example: '1'
        SplmtryData:
          $ref: '#/components/schemas/SuppementaryData1'
    AccountIdentification4Choice:
      required:
        - Othr
      type: object
      properties:
        Othr:
          $ref: '#/components/schemas/GenericAccountIdentification1'
    ContactDetails:
      description: Información de contacto adicional
      type: object
      properties:
        EmailAdr:
          description: '`EmailAddress` dirección de correo electrónico'
          maxLength: 256
          minLength: 1
          type: string
          example: ejemplo@ejmp.com
        MobNb:
          description: '`MobileNumber` Número de teléfono'
          maxLength: 30
          minLength: 1
          pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
          type: string
          example: +57-3001230000
    PartyIdentification272:
      required:
        - Id
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Party52Choice'
    ActiveOrHistoricCurrencyAndAmount:
      description: Número de unidades monetarias especificadas en una moneda activa
      required:
        - Amt
        - Ccy
      type: object
      properties:
        Amt:
          description: >-
            `Amount` Cantidad de dinero que se va a transferir entre el deudor y
            el acreedor.
          maxLength: 24
          minLength: 1
          pattern: ^\d{1,18}(\.\d{0,5})?$
          type: string
          example: '1409000.00'
        Ccy:
          description: '`Currency` Especifica la moneda del importe a transferir.'
          maxLength: 3
          minLength: 1
          pattern: '[A-Z]{3,3}'
          type: string
          example: COP
    AccountSchemeName1Choice:
      description: >-
        Se usa en el caso que el tipo de cuenta sea "llave" para especificar el
        tipo de llave seleccionado 
      type: object
      properties:
        Cd:
          description: Tipo de llave
          maxLength: 70
          minLength: 1
          type: string
          example: email@banco.com
    CashAccount40:
      description: 'Información de tipo y número de cuenta '
      required:
        - Tp
        - Id
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/AccountIdentification4Choice'
        Tp:
          $ref: '#/components/schemas/CashAccountType2Choice'
    InitiatingParty:
      description: >-
        Identificación de la entidad que inicia la orden de pago, puede ser el
        deudor o el TPP.
      required:
        - InitgPty
      type: object
      properties:
        InitgPty:
          $ref: '#/components/schemas/PartyIdentification272'
    AmountType4Choice:
      required:
        - InstdAmt
      type: object
      properties:
        InstdAmt:
          $ref: '#/components/schemas/ActiveOrHistoricCurrencyAndAmount'
    CreditorAccount:
      description: >-
        Tipo y número de cuenta destino. Para pagos por ventanilla no se
        requiere el número de cuenta.
      required:
        - Cd
      type: object
      properties:
        Cd:
          description: |-
            Tipo de cuenta destino

            * `CACC` - CUENTA CORRIENTE (Current)
            * `CARD` - CUENTA DE TARJETA (Tarjeta prepago - CardAccount)
            * `CASH` - PAGO EN EEFECTIVO (CashPayment)
            * `CHEK` - CHEQUE
            * `IKEY` - LLAVES INTEROPERABLES 
            * `LAAC` - CUENTA DE BAJO MONTO (Deposito electrónico)
            * `OTHR` - OTRA CUENTA (OtherAccount)
            * `SVGS` - AHORROS (Savings)
          maxLength: 4
          minLength: 1
          type: string
          example: SVGS
        Id:
          $ref: '#/components/schemas/AccountIdentification4Choice'
        SchmNm:
          $ref: '#/components/schemas/AccountSchemeName1Choice'
    GroupHeader128:
      description: >-
        Conjunto de características compartidas por todas las transacciones
        individuales incluidas en el mensaje de informe de estado.
      required:
        - MsgId
        - CreDtTm
      type: object
      properties:
        MsgId:
          description: >-
            `MessageIdentification` Identificación unica generada
            automaticamente por el sistema del banco (Código interno)
          maxLength: 10
          minLength: 1
          pattern: '[0-9]{1,10}'
          type: string
          example: '934222'
        CreDtTm:
          format: date-time
          description: '`CreationDateTime` Fecha y hora de creación del mensaje.'
          type: string
          example: '2025-02-19T09:30:15.123-05:00'
    CreditTransferTransaction61:
      description: >-
        Proporciona información de cada uno de los procesos de pago, información
        del acreedor y monto de la transacción. El código del banco para la
        cuenta destino no se requiere en el caso de que el tipo de cuenta sea
        una Llave.
      required:
        - PmtId
        - Amt
        - Cdtr
        - CdtrAcct
        - PmtTpInf
      type: object
      properties:
        Amt:
          $ref: '#/components/schemas/AmountType4Choice'
        Cdtr:
          $ref: '#/components/schemas/Creditor'
        CdtrAcct:
          $ref: '#/components/schemas/CreditorAccount'
        CdtrAgt:
          $ref: '#/components/schemas/BranchAndFinancialInstitutionIdentification8'
        PmtId:
          $ref: '#/components/schemas/PaymentIdentification'
        RmtInf:
          $ref: '#/components/schemas/RemittanceInformation'
        PmtTpInf:
          $ref: '#/components/schemas/PaymentTypeInformation26'
        UltmtCdtr:
          $ref: '#/components/schemas/UltimateCreditor'
    Purpose2Choice:
      description: Facilita información sobre la naturaleza del pago
      required:
        - Prtry
      type: object
      properties:
        Prtry:
          description: |-
            Código que especifica la clase de pago

            * `220` - PAGO A PROVEEDORES  
            * `221` - PAGO A PROVEEDORES  
            * `225` - PAGO DE NOMINA  
            * `226` - PAGO DE NOMINA  
            * `238` - PAGOS TERCEROS  
            * `720` - CUENTA MUNDIAL PROVEEDORES  
            * `725` - CUENTA MUNDIAL NOMINA  
            * `738` - CUENTA MUNDIAL TERCEROS  
            * `820` - PAGOS NOMINA CON TRANSPORTE DE EFECTIVO  
            * `825` - PAGOS TESORERIA NOMINA  
            * `838` - PAGOS TESORERIA TERCEROS  
            * `920` - PAGO PROVEEDORES CON TRANSPORTE DE EFECTIVO  
            * `925` - PAGOS DAT NOMINA  
            * `938` - PAGOS DAT TERCEROS  
            * `242` - CONCENTRACIÓN Y DISPERSIÓN DE FONDOS - PILA  
            * `233` - PAGO DE SEGUROS  
            * `230` - PAGO DIVIDENDOS  
            * `231` - PAGO INTERESES  
            * `232` - PAGO COMISIONES  
            * `234` - PAGO CEDULAS CAPITALIZACION  
            * `235` - PAGO TV POR CABLE  
            * `236` - PAGOS CUOTAS CLUB  
            * `229` - PAGO DE PENSIONES  
            * `420` - PAGOS NEQUI  
            * `425` - PAGO NOMINA BANCOLOMBIA  
            * `239` - ABONO OBLIGACIONES CON EL BANCO  
            * `436` - PAGOS A TERCEROS MONEDA EXTRANJERA  
            * `437` - PAGOS GENERALES BANCOLOMBIA  
            * `438` - PAGOS TERCEROS TESORERIA  
            * `439` - PAGO TERCEROS RENDIMIENTOS CDTS  
            * `240` - PAGOS CUENTA MAESTRA  
            * `320` - CREDIPAGO A PROVEEDORES  
            * `325` - CREDIPAGO NOMINA  
            * `450` - PAGOS AFC  
            * `520` - PAGOS IMPUESTOS DEPARTAMENTALES  
            * `455` - DESEMBOLSOS SUFI  
            * `456` - PAGO COMISIONES SUFI  
            * `457` - PAGO A TERCEROS  
            * `458` - PAGOS DE CARTERA SUFI  
            * `421` - PAGO PROVEEDORES ERP  
            * `460` - PAGOS DIVIDENDOS BANCOLOMBIA  
            * `470` - PAGOS FACTORING DESEMBOLSOS  
            * `471` - PAGOS FACTORING DEVOLUCIONES  
            * `401` - PAGO EMPRESA TRANSPORTE MASIVO  
            * `410` - PAGOS LEASING PROVEEDORES  
            * `402` - PAGOS POR REINTEGROS LIBRANZA  
            * `403` - PAGO ELECTRONICO FLYPASS (INMEDIATO)  
            * `404` - PAGO ELECTRONICO FLYPASS (RECURRENTE)  
            * `407` - DISPERSION DE IMPUESTOS  
            * `451` - DEVOLUCIONES AFC  
            * `405` - REINTEGRO SEGURO DE DESEMPLEO  
            * `999` - ENSAYO PASO A PRODUCCION  
            * `250` - PAGO DE SUBSIDIO  
            * `406` - PAGOS POR REINTEGROS ACH SLN. INMOBILIARIA
            * `415` - CXP RECAUDOS
            * `447` - PAGOS DE SUBSIDIOS
            * `448` - PAGOS DE SUBSIDIO PRIMAS
            * `260` - TRASLADOS EXENTOS FIDUCIARIA
            * `449` - PAGOS SUBSIDIO TRABAJADORES
            * `400` - PAGO VISA NACIONAL
            * `446` - SUBSIDIO NOMINA AGROPECUARIO
            * `480` - PAGO PROVEEDORES DE RECARGAS
            * `241` - CANCELACION CUENTA DE GARANTIAS
            * `445` - SUBSIDIO NUEVOS EMPLEOS
            * `444` - SUBSIDIO EMPRESA AFECTADA PARO
            * `243` - PAGO CTA GARANTIA MOBILIARIA
            * `530` - PAGOS IMPUESTOS DEPARTAMENTALES
            * `261` - PAGO SIMPLE
          maxLength: 140
          minLength: 1
          type: string
          example: '238'
    RemittanceInformation:
      description: >-
        Proporciona detalles adicionales sobre el propósito del pago,
        facilitando la conciliación entre el deudor y el acreedor, como la IP de
        origen de pago.
      type: object
      properties:
        Ustrd:
          description: '`Unstructured` Especifica la IP de origen del pago'
          maxLength: 35
          minLength: 1
          type: string
          example: 190.00.1.1
    UltimateCreditor:
      description: >-
        Parte autorizada por el acreedor para recibir o reclamar el monto de un
        cheque (Solo aplica para pago en cheque)
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Party52Choice'
    CategoryPuspose1Choice:
      description: >-
        Especifica el propósito del pago. La parte iniciadora lo utiliza para
        proporcionar información relativa al procesamiento del pago. En el caso
        que no se reporte ningun dato asignar por defecto el código 238
      type: object
      properties:
        Prtry:
          description: |-
            Código que especifica la clase de pago

            * `220` - PAGO A PROVEEDORES  
            * `221` - PAGO A PROVEEDORES  
            * `225` - PAGO DE NOMINA  
            * `226` - PAGO DE NOMINA  
            * `238` - PAGOS TERCEROS  
            * `720` - CUENTA MUNDIAL PROVEEDORES  
            * `725` - CUENTA MUNDIAL NOMINA  
            * `738` - CUENTA MUNDIAL TERCEROS  
            * `820` - PAGOS NOMINA CON TRANSPORTE DE EFECTIVO  
            * `825` - PAGOS TESORERIA NOMINA  
            * `838` - PAGOS TESORERIA TERCEROS  
            * `920` - PAGO PROVEEDORES CON TRANSPORTE DE EFECTIVO  
            * `925` - PAGOS DAT NOMINA  
            * `938` - PAGOS DAT TERCEROS  
            * `242` - CONCENTRACIÓN Y DISPERSIÓN DE FONDOS - PILA  
            * `233` - PAGO DE SEGUROS  
            * `230` - PAGO DIVIDENDOS  
            * `231` - PAGO INTERESES  
            * `232` - PAGO COMISIONES  
            * `234` - PAGO CEDULAS CAPITALIZACION  
            * `235` - PAGO TV POR CABLE  
            * `236` - PAGOS CUOTAS CLUB  
            * `229` - PAGO DE PENSIONES  
            * `420` - PAGOS NEQUI  
            * `425` - PAGO NOMINA BANCOLOMBIA  
            * `239` - ABONO OBLIGACIONES CON EL BANCO  
            * `436` - PAGOS A TERCEROS MONEDA EXTRANJERA  
            * `437` - PAGOS GENERALES BANCOLOMBIA  
            * `438` - PAGOS TERCEROS TESORERIA  
            * `439` - PAGO TERCEROS RENDIMIENTOS CDTS  
            * `240` - PAGOS CUENTA MAESTRA  
            * `320` - CREDIPAGO A PROVEEDORES  
            * `325` - CREDIPAGO NOMINA  
            * `450` - PAGOS AFC  
            * `520` - PAGOS IMPUESTOS DEPARTAMENTALES  
            * `455` - DESEMBOLSOS SUFI  
            * `456` - PAGO COMISIONES SUFI  
            * `457` - PAGO A TERCEROS  
            * `458` - PAGOS DE CARTERA SUFI  
            * `421` - PAGO PROVEEDORES ERP  
            * `460` - PAGOS DIVIDENDOS BANCOLOMBIA  
            * `470` - PAGOS FACTORING DESEMBOLSOS  
            * `471` - PAGOS FACTORING DEVOLUCIONES  
            * `401` - PAGO EMPRESA TRANSPORTE MASIVO  
            * `410` - PAGOS LEASING PROVEEDORES  
            * `402` - PAGOS POR REINTEGROS LIBRANZA  
            * `403` - PAGO ELECTRONICO FLYPASS (INMEDIATO)  
            * `404` - PAGO ELECTRONICO FLYPASS (RECURRENTE)  
            * `407` - DISPERSION DE IMPUESTOS  
            * `451` - DEVOLUCIONES AFC  
            * `405` - REINTEGRO SEGURO DE DESEMPLEO  
            * `999` - ENSAYO PASO A PRODUCCION  
            * `250` - PAGO DE SUBSIDIO  
            * `406` - PAGOS POR REINTEGROS ACH SLN. INMOBILIARIA
            * `415` - CXP RECAUDOS
            * `447` - PAGOS DE SUBSIDIOS
            * `448` - PAGOS DE SUBSIDIO PRIMAS
            * `260` - TRASLADOS EXENTOS FIDUCIARIA
            * `449` - PAGOS SUBSIDIO TRABAJADORES
            * `400` - PAGO VISA NACIONAL
            * `446` - SUBSIDIO NOMINA AGROPECUARIO
            * `480` - PAGO PROVEEDORES DE RECARGAS
            * `241` - CANCELACION CUENTA DE GARANTIAS
            * `445` - SUBSIDIO NUEVOS EMPLEOS
            * `444` - SUBSIDIO EMPRESA AFECTADA PARO
            * `243` - PAGO CTA GARANTIA MOBILIARIA
            * `530` - PAGOS IMPUESTOS DEPARTAMENTALES
            * `261` - PAGO SIMPLE
          maxLength: 4
          minLength: 1
          type: string
          example: '238'
  headers:
    api-version:
      schema:
        type: string
        x-ibm-languages:
          description:
            en: API Version
      example: 1.0.0
      description: Versión de la API.
    rate-limit:
      schema:
        type: string
        x-ibm-languages:
          description:
            en: Resquest limit per time interval.
      example: 150/1second
      description: Limite de solicitudes por intervalo de tiempo
    strict-transport-security:
      schema:
        type: string
      example: max-age=31536000; includesubdomains
      description: >-
        Establece una política de seguridad estricta de transporte (HSTS), lo
        que indica al navegador que solo debe acceder al sitio web a través de
        una conexión HTTPS segura durante un período de tiempo determinado (en
        este caso, 31536000 segundos, que es un año) y que incluya todos los
        subdominios (incluyendo subdominios).
    cache-control:
      schema:
        type: string
      example: private, no-cache, no-store, max-age=0, no-transform
      description: >-
        Indica al navegador web y a los intermediarios que no almacenen en caché
        ninguna versión de la respuesta, lo que significa que deben solicitar
        siempre una nueva copia al servidor.
    x-permitted-cross-domain-policies:
      schema:
        type: string
      example: none
      description: >-
        Esta cabecera establece una política que define si otros dominios pueden
        cargar recursos (como fuentes, contenido multimedia, etc.) desde tu
        servidor. Es especialmente relevante para contenidos que se cargan en
        aplicaciones Flash y Adobe PDF, y ayuda a prevenir ataques de secuencias
        de comandos (scripts) entre dominios.
    referrer-policy:
      schema:
        type: string
      example: strict-origin-when-cross-origin
      description: >-
        Esta cabecera controla qué información sobre el referer (o referente) de
        una solicitud HTTP es compartida con los sitios web de destino. Esto es
        útil para limitar los datos expuestos sobre el origen de la solicitud,
        mejorando la privacidad de los usuarios al evitar compartir la URL
        completa.
    permissions-policy:
      schema:
        type: string
      example: camera=(), microphone=(), geolocation=(), usb=(), midi=()
      description: >-
        Esta cabecera define qué APIs o funcionalidades del navegador (como
        ubicación, cámara, micrófono, etc.) están disponibles para el sitio web
        o los iframes de terceros. Controlar estas funciones ayuda a limitar la
        exposición de los datos del usuario y mitigar riesgos potenciales de
        privacidad y seguridad.
    content-security-policy:
      schema:
        type: string
      example: default-src 'self'; frame-ancestors 'self'; form-action 'self'
      description: >-
        Especifica una política de seguridad de contenido que controla qué
        recursos pueden cargarse en el contexto del documento actual. En este
        caso, se establece que ningún marco (iframes) puede ser cargado desde
        ningún origen ('none').
    message-id:
      schema:
        type: string
        x-ibm-languages:
          description:
            en: >-
              Message identifier or correlation identifier used for the
              traceability of the API calls.
      example: d1f46c01-7d59-42a1-8171-633fd7d86cd6
      description: >-
        Identificador del mensaje o de correlación usado para la trazabilidad de
        los llamados a las APIs.
    content-type:
      schema:
        type: string
      example: application/json
      description: Content type de respuesta
  securitySchemes:
    clientId:
      type: apiKey
      name: Client-Id
      in: header
      x-key-type: client_id
    clientSecret:
      type: apiKey
      name: Client-Secret
      in: header
      x-key-type: client_secret
security:
  - clientId: []
    clientSecret: []
tags:
  - name: Monitoring
    description: Operaciones para realizar el monitoreo de la API
  - name: initiatePayment
    description: 'Operación que permite iniciar el proceso de pago empresarial uno a uno '
x-ibm-configuration:
  compatibility:
    enforce-required-params: false
    request-headers: true
  testable: true
  enforced: true
  cors:
    enabled: true
  phase: realized
  properties:
    expTime:
      description: Tiempo de expiración que tendrán los JWT creados.
      encoded: false
    endpoint:
      description: >-
        URL del microservicio al que se accede para realizar las operaciones
        definidas en la API.
      encoded: false
    tlsProfile:
      description: >-
        Perfil de seguridad TLS utilizado para establecer conexiones seguras
        mediante el protocolo TLS.
      encoded: false
    tlsProfileJWT:
      description: >-
        Perfil de seguridad TLS específico para la autenticación basada en
        tokens JWT.
      encoded: false
    hostName:
      description: >-
        Nombre del host que identifica el servidor donde se encuentra desplegada
        la API en API Connect.
      encoded: false
  catalogs:
    development:
      properties:
        catalogName: development
        kid: gw-aws-eks-pagos-jwt-dev
        issuer: https://api-aws-dev.apps.ambientesbc.com/
        expTime: '3600'
        tlsProfile: apic-tls-profile-pagos
        tlsProfileJWT: apic-tls-profile-pagos-jwt
        endpoint: >-
          CatalogsSampleValue
        hostName: gw-pagos-dev.apps.ambientesbc.lab
    testing:
      properties:
        catalogName: testing
        kid: gw-aws-eks-pagos-jwt-qa
        issuer: https://api-aws-qa.apps.ambientesbc.com/
        expTime: '3600'
        tlsProfile: apic-tls-profile-pagos
        tlsProfileJWT: apic-tls-profile-pagos-jwt
        endpoint: >-
          CatalogsSampleValue
        hostName: gw-pagos-qa.apps.ambientesbc.lab
    sb:
      properties:
        catalogName: sandbox
        tlsProfile: apic-tls-profile-cluster-eks-integracion-sandbox
        tlsProfileJWT: apic-tls-profile-pagos-jwt
        endpoint: >-
          https://microcks-qa.apps.ambientesbc.lab/rest/Payment+Order+Initiation+-+Payment+Order/1.0.0$(api.operation.path)$(request.search)
        hostName: gw-sandbox-qa.apps.ambientesbc.lab
    production:
      properties:
        catalogName: production
        kid: gw-aws-eks-pagos-jwt
        issuer: https://api-aws.apps.bancolombia.com/
        expTime: '120'
        tlsProfile: apic-tls-profile-pagos
        tlsProfileJWT: apic-tls-profile-pagos-jwt
        endpoint: >-
          CatalogsSampleValue
        hostName: gw-pagos.apps.bancolombia.corp
  type: rest
  gateway: datapower-api-gateway
  activity-log:
    enabled: true
    success-content: payload
    error-content: payload
  assembly:
    execute:
      - gatewayscript:
          title: init-meta
          source: |-
            const validateHostHeader = () => {
              const validHostName = context.get("api.properties.hostName");
              const hostHeader = context.get("request.headers.host");
              if (hostHeader != validHostName) {
                const errors = [];
                const detail = "Header host inválido";
                const code = 'SA400';
                errors.push({ code, detail });
                context.set('ctx.errors', errors);
                context.reject('ParametersException', detail);
              }
            }

            const getRequestDate = () => {
              let systemTime = new Date();
              systemTime = new Date(systemTime.getTime() - 3600 * 5000).toISOString().slice(0, 23);

              return systemTime + "-05:00";
            }

            const init = () => {
              const meta = {
                _messageId: context.get('request.headers.message-id'),
                _requestDateTime: getRequestDate(),
                _applicationId: context.get('client.app.id')
              }
              context.set('ctx.meta', meta);
              validateHostHeader();
            }

            init();
          description: >-
            Se inicializa el objeto meta del cuerpo de la respuesta del método y
            se valida el host
          version: 2.0.0
      - switch:
          title: switch
          case:
            - condition: ($operationID() = 'initiatePayment')
              execute:
                - xslt:
                    title: xslt
                    source: |-
                      <?xml version="1.0" encoding="UTF-8"?>
                      <xsl:stylesheet version="1.0"
                          xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                          xmlns:apigw="http://www.ibm.com/xmlns/datapower/2017/11/apigateway"
                          xmlns:dp="http://www.datapower.com/extensions"
                          extension-element-prefixes="dp apigw"
                          exclude-result-prefixes="dp apigw xsl">
                          
                          <xsl:template match="/">
                          
                            <xsl:variable name="certificateDetails" select="dp:get-cert-details(concat('cert:',substring-before(substring-after(dp:request-header('X-Client-Certificate'),'-----BEGIN CERTIFICATE-----'),'-----END CERTIFICATE-----')))"/>
                          
                          
                            <xsl:variable name="modulus" select="string($certificateDetails/*[local-name()='CertificateDetails']/*[local-name()='KeyValue']/*[local-name()='RSAKeyValue']/*[local-name()='Modulus'])" />
                            <xsl:variable name="exponent" select="string($certificateDetails/*[local-name()='CertificateDetails']/*[local-name()='KeyValue']/*[local-name()='RSAKeyValue']/*[local-name()='Exponent'])" />
                          
                            <apigw:set-variable name="'ctx.modulus'" value="$modulus"/>
                            <apigw:set-variable name="'ctx.exponent'" value="$exponent"/>
                                  
                          </xsl:template>
                      </xsl:stylesheet>
                    description: >-
                      Obtain Modulus and Exponent from Certificate sended via
                      Http Header
                    compile-settings: {}
                    version: 2.0.0
                    input: false
                - gatewayscript:
                    title: set-jwk
                    source: >-
                      buildJWK();


                      function buildJWK() {
                          try {
                              //Se obtienen los datos del certificado que llega en la solicitud el Modulus y el Exponent con el que se arma la llave pública
                              const modulus = context.get("ctx.modulus");
                              const exponent = context.get("ctx.exponent");
                          
                              if (!modulus) {
                                  throw new Error("Error con la lectura del modulus");
                              }

                              if (!exponent) {
                                  throw new Error("Error con la lectura del exponent");
                              }
                              
                              //Se arma el JWK que representa de la llave pública
                              const jwkPublicKey = {
                                  n: modulus,
                                  e: exponent,
                                  kty: "RSA"
                              }

                              context.set("ctx.jwk", JSON.stringify(jwkPublicKey));
                          } catch (error) {
                              handleError(error);
                          }
                      }
                          
                      function handleError(error) {
                          const detail = error.message;
                          const code = "SA500";
                          const errors = [];
                          errors.push({ code, detail });
                          context.set('ctx.errors', errors);
                          throwError({ errorName: "ParametersException" });
                      }
                          
                      function throwError({ errorName = "Default", description =
                      "Internal Error", code = 500 }) {
                          context.set("ctx.errorData", { description, code });
                          context.reject(errorName, description);
                      }
                    description: Asignación del JWK
                    version: 2.0.0
                - jwt-validate:
                    title: jwt-validate
                    jwt: request.headers.json-web-token
                    output-claims: ctx.claims
                    version: 2.0.0
                    iss-claim: .+
                    aud-claim: APIGateway_LAN
                    jws-jwk: ctx.jwk
                - gatewayscript:
                    title: validation-error-jwt
                    source: >-
                      validateCredentials();


                      function validateCredentials() {
                          
                          const errors = [];
                          
                          try {
                              const app = context.get('client.app.name');
                              const appName = app.trim();
                              const claims = context.get("ctx.claims");
                              const name = appName.toUpperCase().split('-');
                              const ident = name[1];
                              const iss = claims.iss;
                              const jwtTimeExpired = context.get("jwtTimeExpired");
                              const today = (new Date() / 1000) + 60;
                              const code = 'SA401';
                              let detail;
                          
                              //validate AW
                              if (iss != ident) {
                                  detail = "Invalid Credentials";
                                  errors.push({ code, detail });
                              }
                          
                              if ((claims.exp - claims.iat) > jwtTimeExpired) {
                                  detail = "Invalid Credentials time expired invalid";
                                  errors.push({ code, detail });
                              }
                          
                              if (claims.iat > today) {
                                  detail = "Invalid Credentials iat future";
                                  errors.push({ code, detail });
                              }
                          
                              if (errors.length > 0) {
                                  context.set('ctx.errors', errors);
                                  throwError({ errorName: "ParametersException", description: "Unauthorized", code: 401 })
                              }
                          
                          } catch (error) {
                              handleError(error);
                          }
                      }
                          
                      function handleError(error) {
                          const detail = error.message;
                          const code = "SA500";
                          const errors = [];
                          errors.push({ code, detail });
                          context.set('ctx.errors', errors);
                          throwError({ errorName: "ParametersException" });
                      }
                          
                      function throwError({ errorName = "Default", description =
                      "Internal Error", code = 500 }) {
                          context.set("ctx.errorData", { description, code });
                          context.reject(errorName, description); 
                      }
                    description: Valida si hay algún error en el JWT
                    version: 2.0.0
                - gatewayscript:
                    title: validate-request
                    source: >-
                      const errors = [];      


                      validateParameters();



                      function validateParameters() {
                        try {
                          const app = context.get('client.app.name').trim();
                          const consumerId = getConsumer(app);
                          context.set('ctx.consumer', consumerId);
                            
                          const requestHeaders = context.get('request.headers');
                          const headerConstraints = {"json-web-token":{"in":"header","name":"json-web-token","required":true,"type":"string"},"x-client-certificate":{"in":"header","name":"x-client-certificate","required":true,"type":"string"},"message-id":{"in":"header","name":"message-id","required":true,"type":"string","pattern":"^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"}};
                          validateRequestHeaders(headerConstraints, requestHeaders);
                          const bodyConstraints = {"requestBody":{"type":"object","properties":{"data":{"type":"object","properties":{"CstmrCdtTrfInitn":{"type":"object","properties":{"GrpHdr":{"type":"object","properties":{"CredtTm":{"type":"string","format":"date-time"},"InitgPty":{"type":"object","properties":{"InitgPty":{"type":"object","properties":{"Id":{"type":"object","properties":{"PrvtId":{"type":"object","properties":{"Othr":{"type":"object","properties":{"Id":{"type":"string","maxLength":35,"minLength":1},"SchmeNm":{"type":"object","properties":{"Cd":{"type":"string","enum":["CC","CE","PA","PPT","IEPN","CD","NIT","TI","IEPJ","FD","RC"],"maxLength":4,"minLength":1}},"required":["Cd"]}},"required":["SchmeNm","Id"]}},"required":["Othr"]}},"required":["PrvtId"]}},"required":["Id"]}},"required":["InitgPty"]},"InitnSrc":{"type":"object","properties":{"Nm":{"type":"string","maxLength":3,"minLength":1}},"required":["Nm"]},"MsgId":{"type":"string","maxLength":35,"minLength":1},"NbOfTxs":{"type":"string","maxLength":15,"minLength":1,"pattern":"[0-9]{1,15}"},"SplmtryData":{"type":"object","properties":{"Envlp":{"type":"object","properties":{"Key":{"type":"string","maxLength":35,"minLength":1},"Val":{"type":"string","maxLength":350,"minLength":1}},"required":["Key","Val"]},"PlcAndNm":{"type":"string","maxLength":350,"minLength":1}},"required":["Envlp"]}},"required":["MsgId","CredtTm","NbOfTxs","InitnSrc","InitgPty"]},"PmtInf":{"type":"object","properties":{"CdtTrfTxInf":{"type":"object","properties":{"Amt":{"type":"object","properties":{"InstdAmt":{"type":"object","properties":{"Amt":{"type":"string","maxLength":24,"minLength":1,"pattern":"^\\d{1,18}(\\.\\d{0,5})?$"},"Ccy":{"type":"string","maxLength":3,"minLength":1,"pattern":"[A-Z]{3,3}"}},"required":["Amt","Ccy"]}},"required":["InstdAmt"]},"Cdtr":{"type":"object","properties":{"CtctDtls":{"type":"object","properties":{"EmailAdr":{"type":"string","maxLength":256,"minLength":1},"MobNb":{"type":"string","maxLength":30,"minLength":1,"pattern":"\\+[0-9]{1,3}-[0-9()+\\-]{1,30}"}}},"Id":{"type":"object","properties":{"PrvtId":{"type":"object","properties":{"Othr":{"type":"object","properties":{"Id":{"type":"string","maxLength":35,"minLength":1},"SchmeNm":{"type":"object","properties":{"Cd":{"type":"string","enum":["CC","CE","PA","PPT","IEPN","CD","NIT","TI","IEPJ","FD","RC"],"maxLength":4,"minLength":1}},"required":["Cd"]}},"required":["SchmeNm","Id"]}},"required":["Othr"]}},"required":["PrvtId"]},"Nm":{"type":"string","maxLength":140,"minLength":1}},"required":["Nm","Id"]},"CdtrAcct":{"type":"object","properties":{"Cd":{"type":"string","maxLength":4,"minLength":1},"Id":{"type":"object","properties":{"Othr":{"type":"object","properties":{"Id":{"type":"string","maxLength":35,"minLength":1}},"required":["Id"]}},"required":["Othr"]},"SchmNm":{"type":"object","properties":{"Cd":{"type":"string","maxLength":70,"minLength":1}}}},"required":["Cd"]},"CdtrAgt":{"type":"object","properties":{"FinInstnId":{"type":"object","properties":{"Othr":{"type":"object","properties":{"Id":{"type":"string","maxLength":4,"minLength":1}},"required":["Id"]}},"required":["Othr"]}},"required":["FinInstnId"]},"PmtId":{"type":"object","properties":{"EndToEndId":{"type":"string","maxLength":35,"minLength":1}},"required":["EndToEndId"]},"RmtInf":{"type":"object","properties":{"Ustrd":{"type":"string","maxLength":35,"minLength":1}}},"PmtTpInf":{"type":"object","properties":{"CtgyPurp":{"type":"object","properties":{"Prtry":{"type":"string","maxLength":4,"minLength":1}}}}},"UltmtCdtr":{"type":"object","properties":{"Id":{"type":"object","properties":{"PrvtId":{"type":"object","properties":{"Othr":{"type":"object","properties":{"Id":{"type":"string","maxLength":35,"minLength":1},"SchmeNm":{"type":"object","properties":{"Cd":{"type":"string","enum":["CC","CE","PA","PPT","IEPN","CD","NIT","TI","IEPJ","FD","RC"],"maxLength":4,"minLength":1}},"required":["Cd"]}},"required":["SchmeNm","Id"]}},"required":["Othr"]}},"required":["PrvtId"]}}}},"required":["PmtId","Amt","Cdtr","CdtrAcct","PmtTpInf"]},"Dbtr":{"type":"object","properties":{"Id":{"type":"object","properties":{"PrvtId":{"type":"object","properties":{"Othr":{"type":"object","properties":{"Id":{"type":"string","maxLength":35,"minLength":1},"SchmeNm":{"type":"object","properties":{"Cd":{"type":"string","enum":["CC","CE","PA","PPT","IEPN","CD","NIT","TI","IEPJ","FD","RC"],"maxLength":4,"minLength":1}},"required":["Cd"]}},"required":["SchmeNm","Id"]}},"required":["Othr"]}},"required":["PrvtId"]}},"required":["Id"]},"DbtrAcct":{"type":"object","properties":{"Id":{"type":"object","properties":{"Othr":{"type":"object","properties":{"Id":{"type":"string","maxLength":35,"minLength":1}},"required":["Id"]}},"required":["Othr"]},"Tp":{"type":"object","properties":{"Cd":{"type":"object","properties":{"XtrnlCshAcctTp1Cd":{"type":"string","maxLength":4,"minLength":1}},"required":["XtrnlCshAcctTp1Cd"]}},"required":["Cd"]}},"required":["Tp","Id"]},"DbtrAgt":{"type":"object","properties":{"FinInstnId":{"type":"object","properties":{"Othr":{"type":"object","properties":{"Id":{"type":"string","maxLength":4,"minLength":1}},"required":["Id"]}},"required":["Othr"]}},"required":["FinInstnId"]},"PmtInfId":{"type":"string","maxLength":35,"minLength":1},"PmtMtd":{"type":"string","maxLength":4,"minLength":1},"ReqExctnDt":{"type":"string","format":"date-time"}},"required":["PmtInfId","PmtMtd","ReqExctnDt","Dbtr","DbtrAcct","DbtrAgt","CdtTrfTxInf"]},"SplmtryData":{"type":"object","properties":{"Envlp":{"type":"object","properties":{"Key":{"type":"string","maxLength":35,"minLength":1},"Val":{"type":"string","maxLength":350,"minLength":1}},"required":["Key","Val"]},"PlcAndNm":{"type":"string","maxLength":350,"minLength":1}},"required":["Envlp"]}},"required":["GrpHdr","PmtInf"]}},"required":["CstmrCdtTrfInitn"]}},"required":["data"]}};
                          const getRequestBody = new Promise((resolve, reject) => {
                            context.message.body.readAsJSON((error, json) => (error) ?
                              reject(error) :
                              resolve(json));
                          });

                          const requestBodyValidation = (requestBody) => {
                            validateTags(bodyConstraints, requestBody);
                            
                            if (errors.length > 0) {
                              context.set('ctx.errors', errors);
                              throwParameterError('ParametersException');
                            }
                          }

                          getRequestBody.then(requestBodyValidation, handleError);
                          

                          if (errors.length > 0) {
                            context.set('ctx.errors', errors);
                            throwParameterError('ParametersException');
                          }

                        } catch (e) {
                          handleError(e)
                        }
                      }
                              
                      function validateRequestHeaders(constraints,
                      requestHeaders) {
                          const constraintsTags = Object.entries(constraints);

                          const validation = (constraintsTags.map((constraint) => {
                            const [constraintName, constraintValue] = constraint;
                            const { required } = constraintValue;
                            const tagToValidate = Object.entries(requestHeaders)
                              .find(tag => tag[0].toUpperCase() === constraintName.toUpperCase());
                            if (required && !tagToValidate) {
                              const detail = `Parámetro ${constraintName} es requerido`;
                              const code = 'SA400';
                              errors.push({ code, detail });
                              return false;
                            }
                            return tagToValidate ? validatePrimitives(constraintValue, tagToValidate): true;
                          })).every(Boolean) ? true : false;

                          return validation;
                        }

                      function validateTags(constraints, request) {
                          let validation;
                          const tagConstraints = Object.entries(constraints);
                          const requestTagNames = Object.keys(request);

                          tagConstraints.forEach((tagConstraint) => {
                            const [tagConstraintName, tagConstraintValue] = tagConstraint;

                            if (tagConstraintValue.properties ||
                              (tagConstraintValue.items && tagConstraintValue.items.properties)) {
                              const { required, properties } = (tagConstraintValue.properties)
                                ? tagConstraintValue
                                : tagConstraintValue.items;

                              const validTagNames = Object.keys(properties);

                              if (required) {
                                validateRequiredTags(required, requestTagNames);
                              }

                              validation = (requestTagNames.map((requestTagName) => {
                                return validateTag(validTagNames, requestTagName, properties,
                                  request[requestTagName]);

                              })).every(Boolean) ? true : false;
                            } else {
                              if (tagConstraintValue.required && !requestTagNames.includes(tagConstraintName)) {
                                const detail = `Parámetro ${tagConstraintName} requerido.`;
                                const code = 'SA400';
                                errors.push({ code, detail });
                              } else {
                                const requestTagTovalidate = Object.entries(request)
                                  .filter((recuestField) => recuestField[0] === tagConstraintName);
                                if (requestTagTovalidate && requestTagTovalidate.length > 0) {
                                  validation = validatePrimitives(
                                    constraints[tagConstraintName],
                                    requestTagTovalidate[0]
                                  );
                                }
                              }
                            }
                          });
                          return validation;
                        }

                      function validateTag(validTagNames, requestTagName,
                      constraints, requestObject) {
                          
                          if (!validTagNames.includes(requestTagName)) {
                            const detail = `Parámetro ${requestTagName} no es un tag válido`;
                            const code = 'SA400';
                            errors.push({ code, detail });
                            return false;
                          }

                          const tagConstraint = {};
                          
                          if (Array.isArray(requestObject)) {
                            if (typeof requestObject[0] !== 'object') {
                              return validatePrimitives(
                                constraints[requestTagName],
                                [requestTagName, requestObject]
                              );
                            }

                            if (requestObject.includes(null) || requestObject.includes(undefined)) {
                              const code = 'SA400';
                              const detail = `El arreglo ${requestTagName} no puede contener valores nulos o indefinidos`;
                              errors.push({ code, detail });
                              return false;
                            }

                            return (requestObject.map((item) => {
                              tagConstraint[requestTagName] = constraints[requestTagName];
                              return validateTags(tagConstraint, item);
                            })).every(Boolean) ? true : false;
                          }

                          if (typeof requestObject !== 'object') {
                            return validatePrimitives(
                              constraints[requestTagName],
                              [requestTagName, requestObject]
                            );
                          }

                          if (requestObject === null || requestObject === undefined) {
                            const code = 'SA400';
                            const detail = `El parámetro ${requestTagName} no puede ser nulo o indefinido`;
                            errors.push({ code, detail });
                            return false;
                          }

                          tagConstraint[requestTagName] = constraints[requestTagName];

                          return validateTags(tagConstraint, requestObject);
                        }

                      function validateRequiredTags(requiredTags,
                      requestTagNames) {
                          requiredTags.forEach((requiredTag) => {
                            if (!requestTagNames.includes(requiredTag)) {
                              const detail = `Parámetro ${requiredTag} requerido`;
                              const code = 'SA400';
                              errors.push({ code, detail });
                            }
                          });
                        }

                      function validatePrimitives(constraint, entry) {
                          const value = entry[1];
                          const isArray = Array.isArray(value);

                          if (isArray) {
                            if (value.length < 1) {
                              const code = 'SA400';
                              const detail = `El arreglo ${entry[0]} debe tener por lo menos un valor`;
                              errors.push({ code, detail });
                              return false;
                            }

                            if (value.includes(null) || value.includes(undefined)) {
                              const code = 'SA400';
                              const detail = `El arreglo ${entry[0]} no puede contener valores nulos o indefinidos`;
                              errors.push({ code, detail });
                              return false;
                            }

                            if (constraint.items.type === 'string') {
                              return validateStringArray(constraint.items, entry);
                            }

                            if (constraint.items.type === 'number') {
                              return validateNumberArray(constraint.items, entry);
                            }

                            if (constraint.items.type === 'integer') {
                              return validateIntegerArray(constraint.items, entry);
                            }
                            
                            if (constraint.items.type === 'boolean') {
                              return validateBooleanArray(constraint.items, entry);
                            }
                          }

                          if (constraint.type === 'string') {
                            return validateString(constraint, entry);
                          }

                          if (constraint.type === 'number') {
                            return validateNumber(constraint, entry);
                          }

                          if (constraint.type === 'integer') {
                            return validateInteger(constraint, entry);
                          }

                          if (constraint.type === 'boolean') {
                            return validateBoolean(constraint, entry);
                          }

                          const code = 'SA400';
                          const detail = `El valor ${entry[0]} no tiene la estructura esperada en el request`;
                          errors.push({ code, detail });
                          return false;
                        }

                      function validateString(constraint, entry) {
                          const code = 'SA400';
                          const type = 'string';
                          const [name, value] = entry;
                          const { minLength, maxLength, pattern } = constraint;
                          const enumConstraints = constraint.enum;
                          const format = constraint.format;
                          const validPattern = (pattern) ? new RegExp(pattern) : null;
                          const dateRegex = /^\d{4}-\d{2}-\d{2}$/;
                          const dateTimeRegex =/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z$/;

                          if (typeof value !== type) {
                            const detail = `El valor del parámetro ${name} se espera que sea de tipo ${type}`;
                            errors.push({ code, detail });
                            return false;
                          }

                          if (validPattern && !validPattern.test(value)) {
                            const detail = `El valor del parámetro ${name} no cumple con la expresión regular`;
                            errors.push({ code, detail });
                            return false;
                          }

                          if (enumConstraints && !enumConstraints.includes(value)) {
                            const detail = `El valor del parámetro ${name} no hace parte de los valores válidos`;
                            errors.push({ code, detail });
                            return false;
                          }

                          if (minLength && value.length < minLength) {
                            const detail = `Longitud del parámetro ${name} es menor a la lóngitud mínima esperada: ${minLength}`;
                            errors.push({ code, detail });
                            return false;
                          }

                          if (maxLength && value.length > maxLength) {
                            const detail = `Longitud del parámetro ${name} es mayor a la lóngitud máxima esperada: ${maxLength}`;
                            errors.push({ code, detail });
                            return false;
                          }

                          if(format && format === 'date') {
                            const d = new Date(value);

                            if(!value.match(dateRegex)){
                              const detail = `El valor del parámetro ${name} no cumple con la expresión regular (YYYY-MM-DD), no es una fecha válida`;
                              errors.push({ code, detail });
                              return false;
                            }

                            if(Number.isNaN(d.getTime())){
                              const detail = `El valor del parámetro ${name} no es una fecha válida`;
                              errors.push({ code, detail });
                              return false;
                            }
                          }

                          if(format && format === 'date-time') {
                            const d = new Date(value);
                            if(!value.match(dateTimeRegex)){
                              const detail = `El valor del parámetro ${name} no cumple con la expresión regular (YYYY-MM-DDThh:mm:ss.sssZ), no es una fecha válida`;
                              errors.push({ code, detail });
                              return false;
                            }

                            if(Number.isNaN(d.getTime())){
                              const detail = `El valor del parámetro ${name} no es una fecha válida`;
                              errors.push({ code, detail });
                              return false;
                            }
                          }

                          return true;
                        }

                      function validateStringArray(constraint, tagToValidate) { 
                          const [parameterName, arrayString] = tagToValidate;

                          return (arrayString.map(stringValue =>
                            validateString(constraint, [parameterName, stringValue])))
                            .every(Boolean) ? true : false;
                        }

                      function countDigits(number) {
                          const numberString = number.toString();
                          const [integers, decimals = ''] = numberString.split('.');

                          return { integers: integers.length, decimals: decimals.length };
                        }

                      function validateNumber(constraint, tagToValidate) {
                          const code = 'SA400';
                          const [name, value] = tagToValidate;
                          const maximum = constraint.maximum ? constraint.maximum: 9007199254740991;
                          const enumConstraints = constraint.enum;
                        
                          if (typeof value !== 'number') {
                            const detail = `El valor del parámetro ${name} se espera que sea de tipo double`;
                            errors.push({ code, detail });
                            return false;
                          }

                          if (enumConstraints && !enumConstraints.includes(value)) {
                            const detail = `El valor del parámetro ${name} no hace parte de los valores válidos`;
                            errors.push({ code, detail });
                            return false;
                          }

                          const { integers, decimals } = countDigits(value);
                          const { integers: expectedIntegers, decimals: expectedDecimals } = countDigits(maximum);
                          const expectedDigitsValidation = integers <= expectedIntegers && decimals <= expectedDecimals;

                          if (!expectedDigitsValidation) {
                            const detail = `El valor del parámetro ${name} espera máximo ${expectedIntegers} dígitos enteros y máximo ${expectedDecimals} dígitos decimales`;
                            errors.push({ code, detail });
                            return false;
                          }

                          return true;
                        }

                      function validateNumberArray(constraint, tagToValidate) {
                          const [parameterName, arrayNumber] = tagToValidate;

                          return (arrayNumber.map(numberValue =>
                            validateNumber(constraint, [parameterName, numberValue])))
                            .every(Boolean) ? true : false;
                        }

                      function validateInteger(constraint, tagToValidate) {
                          const code = 'SA400';
                          const [name, value] = tagToValidate;
                          const minimum = constraint.minimum ? constraint.minimum: 0;
                          const maximum = constraint.maximum ? constraint.maximum: 9007199254740991;
                          const enumConstraints = constraint.enum;
                        
                          if (typeof value !== 'number') {
                            const detail = `El valor del parámetro ${name} se espera que sea de tipo integer`;
                            errors.push({ code, detail });
                            return false;
                          }

                          if (enumConstraints && !enumConstraints.includes(value)) {
                            const detail = `El valor del parámetro ${name} no hace parte de los valores válidos`;
                            errors.push({ code, detail });
                            return false;
                          }

                          if (value < minimum) {
                            const detail = `El valor del parámetro ${name} es menor que el valor permitido: ${minimum}`;
                            errors.push({ code, detail });
                            return false;
                          }

                          if (value > maximum) {
                            const detail = `El valor del parámetro ${name} es mayor que el valor permitido: ${maximum}`;
                            errors.push({ code, detail });
                            return false;
                          }

                          return true;
                        }

                      function validateIntegerArray(constraint, tagToValidate) {
                          const [parameterName, arrayNumber] = tagToValidate;

                          return (arrayNumber.map(numberValue =>
                            validateInteger(constraint, [parameterName, numberValue])))
                            .every(Boolean) ? true : false;
                        }

                      function validateBoolean(constraint, tagToValidate) {
                          const code = 'SA400';
                          const [name, value] = tagToValidate;
                          const { type } = constraint;

                          if (typeof value !== type) {
                            const detail = `El valor del parámetro ${name} se espera que sea de tipo boolean`;
                            errors.push({ code, detail });
                            return false;
                          }

                          return true;
                        }

                      function validateBooleanArray(constraint, tagToValidate) {
                          const [parameterName, arrayBoolean] = tagToValidate;

                          return (arrayBoolean.map(booleanValue => validateBoolean(constraint, [parameterName,
                            booleanValue]))).every(Boolean) ? true : false;
                        }

                      function getConsumer(appName) {
                          try {
                            let consumerId = undefined;

                            if (appName.includes('-')){
                              consumerId = appName.split('-')[1];
                            }

                            if (appName.includes('_')){
                              consumerId = appName.split('_')[1];
                            }

                            if (!consumerId) {
                              const detail = 'Identificación de aplicación inválida';
                              const code = 'SA409';
                              errors.push({ code, detail });
                              context.set('ctx.errors', errors);
                            }

                            return consumerId.toUpperCase();
                          } catch (exception) {
                            const detail = 'Identificación de aplicación inválida';
                            const code = 'SA409';
                            errors.push({ code, detail });
                            context.set('ctx.errors', errors);
                          }
                        }

                      function handleError(e) {
                          const detail = e.message;
                          const code = 'SA500';
                          errors.push({ code, detail });
                          context.set('ctx.errors', errors);
                          throwParameterError('ParametersException');
                        }

                      function throwParameterError(errorName) {
                          const description = 'Bad Request';
                          const code = '400';
                          context.set("ctx.errorData", { description, code });
                          context.reject(errorName, description);
                          context.message.statusCode = code;
                        }
                    description: >-
                      Se realiza la validación de los parámetros del query de la
                      solicitud del método.
                    version: 2.0.0
                - switch:
                    title: switch
                    case:
                      - condition: (env.path = 'sb')
                        execute:
                          - invoke:
                              title: invoke
                              verb: POST
                              timeout: 5
                              cache-response: protocol
                              cache-ttl: 900
                              stop-on-error:
                                - ConnectionError
                              version: 2.3.0
                              tls-profile: $(tlsProfile)
                              target-url: $(endpoint)
                      - otherwise:
                          - switch:
                              title: switch
                              case:
                                - condition: >-
                                    (env.path = 'testing' and
                                    request.headers.mock = 'true')
                                  execute:
                                    - gatewayscript:
                                        title: set-backend-headers
                                        source: >-
                                          const getAppName = new Promise((resolve)
                                          =>
                                          resolve(context.get('client.app.name')));

                                          const setHeaders = (appName) => {
                                            context.set('message.headers.app-name', appName);
                                            context.set('message.headers.Client-Secret', 'dummy');
                                            context.set('message.headers.Client-Id', 'dummy');
                                            context.set('message.headers.Accept', 'application/json');
                                          }

                                          getAppName.then(setHeaders);
                                        description: >-
                                          Se establecen las cabeceras de la
                                          petición al backend
                                        version: 2.0.0
                                    - invoke:
                                        title: invoke
                                        verb: keep
                                        timeout: 5
                                        cache-response: protocol
                                        cache-ttl: 900
                                        stop-on-error:
                                          - ConnectionError
                                        version: 2.3.0
                                        tls-profile: $(tlsProfile)
                                        target-url: >-
                                          https://performance-mock.apps.ambientesbc.com/$(api.version)$(api.operation.path)$(request.search)
                                - otherwise:
                                    - gatewayscript:
                                        title: jwt-generator
                                        source: >-
                                          buildJWT();


                                          function buildJWT(){
                                              try{
                                                  //Importa los módulos de la plataforma para manejo de JWT
                                                  const jwt = require('jwt');
                                                  const jose = require('jose');
                                                          
                                                  //Obtiene el tiempo actual del sistema 
                                                  const dateTime = parseInt(new Date() / 1000)
                                                          
                                                  //Genera payload/claims del JWT
                                                  const claims = {
                                                      'iss': "https://"+ context.get("api.endpoint.hostname"),
                                                      'sub': 'api-connect-initiatePayment',
                                                      'token_use': 'access',
                                                      'client_id': 'api-connect-initiatePayment',
                                                      'scope': 'initiatePayment',
                                                      'exp': dateTime + Number.parseInt(context.get("api.properties.expTime")), // 3600 preproductivos y 120 producción
                                                      'iat': dateTime
                                                  };
                                                          
                                                  //Construye el nombre interno que le da la plataforma a la llave privada del TLS Profile
                                                  const orgName = context.get("api.org.name");
                                                  const tlsProfileName = context.get("api.properties.tlsProfileJWT"); //Nombre del TLS Profile que contiene la llave privada 
                                                  const catalogName = context.get("api.catalog.name");
                                                  const privateKeyName = orgName+"_"+catalogName +"_tlsp-"+tlsProfileName+'V1.0.0-key'; //Concatena todo con los prefijos y sufijos que asigna la plataforma
                                                          
                                                  //Construye el header para el JWT
                                                  const jwsHdr = jose.createJWSHeader(privateKeyName, 'RS256');
                                                  jwsHdr.setProtected('kid', "#{kid}#").setProtected('typ', 'JWT');
                                                          
                                                  //Prepara el payload/claims y header para firmar el JWT
                                                  const encoder = new jwt.Encoder(claims);
                                                  encoder.addOperation('sign', jwsHdr); 
                                                          
                                                  //Firma el JWT y lo asigna en el header de autorización
                                                  encoder.encode(function (error, jwtToken) { 
                                                      context.set('message.headers.Authorization', 'Bearer '+ jwtToken);
                                                  });
                                              }catch(error){
                                                  handleError(error);
                                              }
                                          }
                                              
                                          function handleError(error) {
                                              const detail = error.message;
                                              const code = "SA500";
                                              const errors = [];
                                              errors.push({ code, detail });
                                              context.set('ctx.errors', errors);
                                              throwError({ errorName: "ParametersException" });
                                          }
                                              
                                          function throwError({ errorName =
                                          "Default", description = "Internal
                                          Error", code = 500 }) {
                                              context.set("ctx.errorData", { description, code });
                                              context.reject(errorName, description);
                                          }
                                        description: >-
                                          Generación de JWT usando un TLS Client
                                          Profile
                                        version: 2.0.0
                                    - invoke:
                                        title: invoke
                                        verb: POST
                                        timeout: 5
                                        cache-response: protocol
                                        cache-ttl: 900
                                        stop-on-error:
                                          - ConnectionError
                                          - OperationError
                                        version: 2.3.0
                                        tls-profile: $(tlsProfile)
                                        target-url: $(endpoint)
                                    - parse:
                                        title: parse
                                        version: 2.1.0
                                        parse-settings-reference:
                                          default: apic-default-parsesettings
                                    - validate:
                                        title: validate
                                        version: 2.6.0
                                        graphql-error-policy: none
                                        compile-settings: {}
                                        validate-against: definition
                                        definition: >-
                                          #/components/schemas/initiatePaymentResponse
                              version: 2.0.0
                    version: 2.0.0
          version: 2.0.0
    catch:
      - errors:
          - ParametersException
        execute:
          - gatewayscript:
              title: parameters-exception
              source: |-
                const parametersExceptionNodeCode = () => {
                  const errors = context.get('ctx.errors');
                  const status = 400;
                  const failure = {
                    meta: context.get('ctx.meta'),
                    status,
                    title: "Bad Request",
                    errors
                  };

                  context.set('message.body', failure);
                  context.set('message.status.code', status);
                }

                parametersExceptionNodeCode();
              description: ''
              version: 2.0.0
        arrayName: execute
      - errors:
          - ConnectionError
        execute:
          - gatewayscript:
              title: connection-exception
              source: |-
                const connectionExceptionNodeCode = () => {
                  const status = 504;
                  const failure = {
                    meta: context.get('ctx.meta'),
                    status,
                    title: 'Gateway Timeout',
                    errors: [
                      {
                        code: "SP".concat(status),
                        detail: 'El proveedor no respondió en tiempo esperado'
                      }
                    ]
                  };

                  context.set('message.body', failure);
                  context.set('message.status.code', status);
                }

                connectionExceptionNodeCode();
              description: ''
              version: 2.0.0
        arrayName: execute
      - errors:
          - RuntimeError
        execute:
          - gatewayscript:
              title: jwt-error
              source: |-
                const runtimeExceptionNodeCode = () => {
                    const status = 403;
                    const failure = {
                        meta: context.get('ctx.meta'),
                        status,
                        title: 'Forbidden',
                        errors: [
                            {
                                code: 'SA'.concat(status),
                                detail: context.get('jwt-validate.error-message')
                            }
                        ]
                    };
                    context.set('message.body', failure);
                    context.set('message.status.code', status);
                }

                runtimeExceptionNodeCode();
              description: ''
              version: 2.0.0
        arrayName: execute
      - errors:
          - OperationError
        execute:
          - parse:
              title: parse
              version: 2.1.0
              parse-settings-reference:
                default: apic-default-parsesettings
          - validate:
              title: validate-operation-error
              version: 2.6.0
              graphql-error-policy: none
              compile-settings: {}
              validate-against: definition
              definition: '#/components/schemas/failure'
        arrayName: execute
      - errors:
          - ValidateError
        execute:
          - gatewayscript:
              title: validate-exception
              source: |-
                const validateExceptionNodeCode = () => {
                    const status = 502;
                    const failure = {
                      meta: context.get('ctx.meta'),
                      status,
                      title: 'Bad Gateway',
                      errors: [
                        {
                          code: 'SP'.concat(status),
                          detail: 'Se ha presentado un error por mensaje mal formado desde el backend'
                        }
                      ]
                    };
                    context.set('message.body', failure);
                    context.set('message.status.code', status);
                }

                validateExceptionNodeCode();
              description: ''
              version: 2.0.0
        arrayName: execute
      - default:
          - gatewayscript:
              title: default-exception
              source: |-
                const defaultExceptionNodeCode = () => {
                  const status = 500;
                  const failure = {
                    meta: context.get('ctx.meta'),
                    status,
                    title: 'Internal Server Error',
                    errors: [
                      {
                        code: 'SA'.concat(status),
                        detail: 'Se ha presentado un error inesperado'
                      }
                    ]
                  };
                  context.set('message.body', failure);
                  context.set('message.status.code', status);
                }

                defaultExceptionNodeCode();
              description: ''
              version: 2.0.0
    finally:
      - gatewayscript:
          title: filter-headers
          source: |-
            const filterHeaders = (messageId) => {
              //Importa la librería que permite modificar headers en API Connect
              const header_meta = require('header-metadata');
              //Reemplaza los headers del mensaje por los definidos
              header_meta.current.headers = {
                "api-version": context.get('api.version'),
                "rate-limit": context.get('plan.rate-limit')[0].value,
                "strict-transport-security": "max-age=31536000; includeSubDomains",
                "cache-control": "private, no-cache, no-store, max-age=0, no-transform",
                "x-permitted-cross-domain-policies": "none",
                "referrer-policy": "strict-origin-when-cross-origin",
                "permissions-policy": "camera=(), microphone=(), geolocation=(), usb=(), midi=()",
                "content-security-policy": "default-src 'self'; frame-ancestors 'self'; form-action 'self'",
                "message-id": messageId,
                "content-type": "application/json; charset=utf-8"
              }
            }

            const messageId = context.get('request.headers.message-id') ?? '';
            filterHeaders(messageId);
          description: >-
            Se filtra y configura los valores de la cabecera de respuesta del
            API.
          version: 2.0.0
x-API-Protocol:
  Protocols: HTTPS
